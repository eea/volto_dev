{"version":3,"file":"main.411c5e18d1e01841a680.hot-update.js","sources":["webpack:///./src/components/manage/Blocks/TableauBlock/TableauBlockEdit.jsx","webpack:///./src/components/theme/TableauView/TableauReport.jsx","webpack:///./src/components/theme/TableauView/tokenizeUrl.js","webpack:///./src/config.js","webpack:///external \"shallowequal\""],"sourcesContent":["import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\n\nimport { ResponsiveContainer } from 'recharts';\n\nimport TableauReport from '~/components/theme/TableauView/TableauReport';\n\n// const url = 'http://public.tableau.com/views/RegionalSampleWorkbook/Storms';\n\nclass StackedBarChart extends Component {\n  constructor(props) {\n    super(props);\n\n    const data = this.props.data.tableauData || {};\n    let show = !__SERVER__ && data ? true : false;\n\n    let filters =\n      data.filters && data.sheetname ? data.filters[data.sheetname] : {};\n\n    this.state = {\n      show,\n      tableauData: data,\n      url: data.url || '',\n      filters,\n      sheetname: data.sheetname || '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.getChartData = this.getChartData.bind(this);\n    this.saveCallback = this.saveCallback.bind(this);\n  }\n\n  handleChange(e) {\n    let data = e.target.value;\n    try {\n      data = e.target.value;\n      this.setState(\n        {\n          url: data,\n        },\n        // this.onSubmit,\n      );\n    } catch {\n      console.warning('Invalid JSON data: ', data);\n    }\n  }\n\n  onSubmit() {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      tableauData: this.state.tableauData,\n    });\n    this.props.handleClose();\n  }\n\n  saveCallback(saveData) {\n    console.log('Received save data', saveData);\n    let stateData = JSON.parse(JSON.stringify(this.state));\n    this.setState(\n      {\n        tableauData: saveData,\n      },\n      this.onSubmit,\n    );\n  }\n\n  getChartData() {\n    let tableauData = this.state.tableauData;\n    if (typeof tableauData == 'string') {\n      try {\n        tableauData = tableauData;\n      } catch (error) {\n        console.log(error);\n        tableauData = {};\n      }\n    }\n    console.log(tableauData);\n    return tableauData;\n  }\n\n  render() {\n    if (__SERVER__) return '';\n    // const TableauReport = require('tableau-react');\n    console.log(this.state);\n    return (\n      <div className=\"block chartWrapperEdit\">\n        <div className=\"block-inner-wrapper\">\n          {this.state.show && this.state.url ? (\n            <div className=\"image-add\">\n              <ResponsiveContainer>\n                <TableauReport\n                  url={this.state.url}\n                  filters={this.state.filters}\n                  sheetname={this.state.sheetname}\n                  callback={this.saveCallback}\n                />\n              </ResponsiveContainer>\n            </div>\n          ) : (\n            <div className=\"image-add\">\n              <div class=\"ui segment\">\n                <div class=\"ui placeholder\">\n                  <div class=\"image header\">\n                    <div class=\"line\" />\n                    <div class=\"line\" />\n                  </div>\n                  <div class=\"paragraph\">\n                    <div class=\"medium line\" />\n                    <div class=\"short line\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          <div>\n            <label>Enter JSON data</label>\n            <input\n              type=\"text\"\n              defaultValue={this.state.url}\n              placeholder=\"Enter tableau URL\"\n              onChange={this.handleChange}\n            />\n            <Button onClick={() => this.setState({ show: true })}>\n              Show dashboard\n            </Button>\n            <Button onClick={this.onSubmit}>Save</Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StackedBarChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport url from 'url';\n// import { Promise } from 'es6-promise';\nimport shallowequal from 'shallowequal';\nimport tokenizeUrl from './tokenizeUrl';\n\nconst propTypes = {\n  filters: PropTypes.object,\n  url: PropTypes.string.isRequired,\n  parameters: PropTypes.object,\n  options: PropTypes.object,\n  token: PropTypes.string,\n  onLoad: PropTypes.func,\n  query: PropTypes.string,\n};\n\nconst defaultProps = {\n  loading: false,\n  parameters: {},\n  filters: {},\n  options: {},\n  query: '?:embed=yes&:comments=no&:toolbar=yes&:refresh=yes',\n};\n\nclass TableauReport extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filters: props.filters,\n      parameters: props.parameters,\n      saveData: {\n        url: props.url,\n        filters: {},\n      },\n    };\n\n    if (!__SERVER__) {\n      // this.api = require('./../../../../thirdparty/tableau-2.3.0');\n    } else {\n      // this.api = null;\n    }\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.initTableau();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const isReportChanged = nextProps.url !== this.props.url;\n    const isFiltersChanged = !shallowequal(\n      this.props.filters,\n      nextProps.filters,\n      this.compareArrays,\n    );\n    const isParametersChanged = !shallowequal(\n      this.props.parameters,\n      nextProps.parameters,\n    );\n    const isLoading = this.state.loading;\n\n    // Only report is changed - re-initialize\n    if (isReportChanged) {\n      this.initTableau(nextProps.url);\n    }\n\n    // Only filters are changed, apply via the API\n    if (!isReportChanged && isFiltersChanged && !isLoading) {\n      this.applyFilters(nextProps.filters);\n    }\n\n    // Only parameters are changed, apply via the API\n    if (!isReportChanged && isParametersChanged && !isLoading) {\n      this.applyParameters(nextProps.parameters);\n    }\n\n    // token change, validate it.\n    if (nextProps.token !== this.props.token) {\n      this.setState({ didInvalidateToken: false });\n    }\n  }\n\n  onChange() {\n    this.props.callback && this.props.callback(this.state.saveData);\n  }\n\n  /**\n   * Compares the values of filters to see if they are the same.\n   * @param  {Array<Number>} a\n   * @param  {Array<Number>} b\n   * @return {Boolean}\n   */\n  compareArrays(a, b) {\n    if (Array.isArray(a) && Array.isArray(b)) {\n      return a.sort().toString() === b.sort().toString();\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Execute a callback when an array of promises complete, regardless of\n   * whether any throw an error.\n   */\n  onComplete(promises, cb) {\n    Promise.all(promises).then(() => cb(), () => cb());\n  }\n\n  /**\n   * Returns a vizUrl, tokenizing it if a token is passed and immediately\n   * invalidating it to prevent it from being used more than once.\n   */\n  getUrl(nextUrl) {\n    const newUrl = nextUrl || this.props.url;\n    const { token, query } = this.props;\n    const parsed = url.parse(newUrl, true);\n\n    if (!this.state.didInvalidateToken && token) {\n      this.invalidateToken();\n      return tokenizeUrl(newUrl, token) + query;\n    }\n\n    return parsed.protocol + '//' + parsed.host + parsed.pathname + query;\n  }\n\n  // invalidateToken() {\n  //   this.setState({ didInvalidateToken: true });\n  // }\n\n  /**\n   * Asynchronously applies filters to the worksheet, excluding those that have\n   * already been applied, which is determined by checking against state.\n   * @param  {Object} filters\n   * @return {void}\n   */\n  // applyFilters(filters) {\n  //   const REPLACE = Tableau.FilterUpdateType.REPLACE;\n  //   const promises = [];\n  //\n  //   this.setState({ loading: true });\n  //\n  //   for (const key in filters) {\n  //     if (\n  //       !this.state.filters.hasOwnProperty(key) ||\n  //       !this.compareArrays(this.state.filters[key], filters[key])\n  //     ) {\n  //       promises.push(this.sheet.applyFilterAsync(key, filters[key], REPLACE));\n  //     }\n  //   }\n  //\n  //   this.onComplete(promises, () => this.setState({ loading: false, filters }));\n  // }\n  //\n  // applyParameters(parameters) {\n  //   const promises = [];\n  //\n  //   for (const key in parameters) {\n  //     if (\n  //       !this.state.parameters.hasOwnProperty(key) ||\n  //       this.state.parameters[key] !== parameters[key]\n  //     ) {\n  //       const val = parameters[key];\n  //       // Ensure that parameters are applied only when we have a workbook\n  //       if (this.workbook && this.workbook.changeParameterValueAsync) {\n  //         promises.push(this.workbook.changeParameterValueAsync(key, val));\n  //       }\n  //     }\n  //   }\n  //\n  //   this.onComplete(promises, () =>\n  //     this.setState({ loading: false, parameters }),\n  //   );\n  // }\n\n  /**\n   * Initialize the viz via the Tableau JS API.\n   * @return {void}\n   */\n  initTableau(nextUrl) {\n    if (__SERVER__) return;\n    const { filters, parameters } = this.props;\n    const vizUrl = this.getUrl(nextUrl);\n\n    console.log('initing tableau', vizUrl);\n    const options = {\n      ...filters,\n      ...parameters,\n      ...this.props.options,\n      // hideTabs: true,\n      onFirstInteractive: () => {\n        console.log('On first interacitve');\n        this.workbook = this.viz.getWorkbook();\n        let activeSheet = this.workbook.getActiveSheet();\n\n        let saveData = JSON.parse(JSON.stringify(this.state.saveData));\n        saveData['url'] = this.viz.getUrl();\n        saveData['sheetname'] = activeSheet.getName();\n\n        console.log('urls', this.props.url, this.state.saveData.url);\n\n        if (this.props.url !== this.state.saveData.url) {\n          this.setState({ saveData }, this.onChange);\n        } else {\n          this.setState({ saveData });\n        }\n\n        this.viz.addEventListener(\n          this.api.tableauSoftware.TableauEventName.TAB_SWITCH,\n          e => {\n            let sheetname = e.getNewSheetName();\n\n            this.viz.getCurrentUrlAsync().then(r => {\n              const save = {\n                ...this.state.saveData,\n                sheetname: sheetname,\n                url: r,\n                filters: {\n                  ...this.state.saveData.filters,\n                },\n              };\n              this.setState({ saveData: save }, this.onChange);\n            });\n          },\n        );\n        this.viz.addEventListener(\n          this.api.tableauSoftware.TableauEventName.FILTER_CHANGE,\n          e => {\n            console.log('changed filter');\n\n            e.getFilterAsync().then(r => {\n              console.log('filter async', r);\n              let name = r.$caption;\n              let values = r.$appliedValues.map(e => e.value);\n              let sheetname = this.state.saveData.sheetname;\n              const save = {\n                ...this.state.saveData,\n                filters: {\n                  ...this.state.saveData.filters,\n                  [sheetname]: {\n                    ...(this.state.saveData.filters[sheetname] || {}),\n                    [name]: values,\n                  },\n                },\n              };\n              this.setState({ saveData: save }, this.onChange);\n            });\n          },\n        );\n      },\n    };\n\n    console.log('the options', options);\n    // cleanup\n    if (this.viz) {\n      this.viz.dispose();\n      this.viz = null;\n    }\n\n    this.viz = new this.api.tableauSoftware.Viz(\n      this.container,\n      vizUrl,\n      options,\n    );\n  }\n\n  render() {\n    if (__SERVER__) return '';\n    return <div ref={c => (this.container = c)} />;\n  }\n}\n\nTableauReport.propTypes = propTypes;\nTableauReport.defaultProps = defaultProps;\n\nexport default TableauReport;\n","import url from 'url';\n\nfunction tokenizeUrl(_url, token) {\n  const parsed = url.parse(_url, true);\n  const { protocol, host, pathname } = parsed;\n\n  return `${protocol}//${host}/trusted/${token}${pathname}`;\n}\n\nexport default tokenizeUrl;\n","import React from 'react';\n\nimport {\n  settings as defaultSettings,\n  views as defaultViews,\n  widgets as defaultWidgets,\n  blocks as defaultBlocks,\n} from '@plone/volto/config';\n\nimport { defineMessages } from 'react-intl';\nimport TokenWidget from '@plone/volto/components/manage/Widgets/TokenWidget';\nimport HiddenWidget from '~/components/manage/Widgets/Hidden';\nimport CKEditorWidget from '~/components/manage/Widgets/CKEditor';\nimport ChartWidget from '~/components/manage/Widgets/Chart';\n\nimport ChartBlockEdit from '~/components/manage/Blocks/ChartBlock/ChartBlockEdit';\nimport ChartBlockView from '~/components/manage/Blocks/ChartBlock/ChartBlockView';\n\nimport EuropeCompareBlockEdit from '~/components/manage/Blocks/EuropeCompareBlock/Edit';\nimport EuropeCompareBlockView from '~/components/manage/Blocks/EuropeCompareBlock/View';\n\nimport EuropeForestBlockEdit from '~/components/manage/Blocks/EuropeForestBlock/Edit';\nimport EuropeForestBlockView from '~/components/manage/Blocks/EuropeForestBlock/View';\n\nimport PlotlyBlockEdit from '~/components/manage/Blocks/PlotlyChart/Edit';\nimport PlotlyBlockView from '~/components/manage/Blocks/PlotlyChart/View';\n\nimport TableauBlockEdit from '~/components/manage/Blocks/TableauBlock/TableauBlockEdit';\nimport tableauBlockView from '~/components/manage/Blocks/TableauBlock/TableauBlockView';\n\nimport TextBlockEdit from '~/components/manage/Blocks/Text/Edit';\nimport TextBlockView from '~/components/manage/Blocks/Text/View';\n\nimport ForestMetadata from '~/components/theme/Portlets/ForestMetadata';\nimport SliderEditButton from '~/components/manage/Slider/Portlet';\n\n// Display types\n// import CountryView from '~/components/theme/CountryView/CountryView';\n// import CountryPageView from '~/components/theme/CountryPageView/CountryPageView';\nimport HomepageView from '~/components/theme/HomepageView/HomepageView';\nimport VisualizationView from '~/components/theme/VisualizationView/View';\n\nimport createInlineStyleButton from 'draft-js-buttons/lib/utils/createInlineStyleButton';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport underlineSVG from '@plone/volto/icons/underline.svg';\nimport chartIcon from '@plone/volto/icons/world.svg';\n\nimport { layoutViews } from '~/../volto-mosaic/src';\n\nconst Underline = createInlineStyleButton({\n  style: 'UNDERLINE',\n  children: <Icon name={underlineSVG} size=\"24px\" />,\n});\n\nexport const settings = {\n  ...defaultSettings,\n  richTextEditorInlineToolbarButtons: [\n    Underline,\n    ...defaultSettings.richTextEditorInlineToolbarButtons,\n  ],\n  nonContentRoutes: [\n    // handled differently in getBaseUrl\n    ...defaultSettings.nonContentRoutes,\n    '/manage-slider',\n    '/mosaic-settings-view',\n    '/data-providers-view',\n  ],\n};\n\nexport const views = {\n  ...defaultViews,\n  layoutViews: {\n    ...defaultViews.layoutViews,\n    // full_view: CountryView,\n    // country_tab_view: CountryPageView,\n    homepage_view: HomepageView,\n    ...layoutViews,\n  },\n  contentTypesViews: {\n    ...defaultViews.contentTypesViews,\n    visualization: VisualizationView,\n  },\n};\n\n// read @plone/volto/components/manage/Form/Field.jsx to understand this\nexport const widgets = {\n  ...defaultWidgets,\n  vocabulary: {\n    ...defaultWidgets.vocabulary,\n    'fise.topics': TokenWidget,\n    'fise.keywords': TokenWidget,\n    'fise.publishers': TokenWidget,\n  },\n  id: {\n    ...defaultWidgets.id,\n    blocks: HiddenWidget,\n    blocks_layout: HiddenWidget,\n    visualization: ChartWidget,\n  },\n  widget: {\n    ...defaultWidgets.widget,\n    cktext: CKEditorWidget,\n  },\n};\n\ndefineMessages({\n  custom_addons: {\n    id: 'custom_addons',\n    defaultMessage: 'Custom Addons',\n  },\n  plotly_chart: {\n    id: 'plotly_chart',\n    defaultMessage: 'Plotly Chart',\n  },\n  demo_chart: {\n    id: 'demo_chart',\n    defaultMessage: 'Demo Chart',\n  },\n  tableau: {\n    id: 'tableau',\n    defaultMessage: 'Tableau',\n  },\n  forests_specific: {\n    id: 'forests_specific',\n    defaultMessage: 'Forests Specific Blocks',\n  },\n});\n\nconsole.log('alalalala', defaultBlocks)\n\nexport const blocks = {\n  ...defaultBlocks,\n\n  groupBlocksOrder: [\n    ...defaultBlocks.groupBlocksOrder,\n    { id: 'custom_addons', title: 'Custom addons' },\n    { id: 'forests_specific', title: 'Forests Specific Blocks' },\n  ],\n\n  blocksConfig: {\n    ...defaultBlocks.blocksConfig,\n    europe_compare_block: {\n      id: 'europe_compare_block',\n      title: 'Europe Compare Block',\n      view: EuropeCompareBlockView,\n      edit: EuropeCompareBlockEdit,\n      icon: chartIcon,\n      group: 'forests_specific',\n    },\n    europe_forest_block: {\n      id: 'europe_forest_block',\n      title: 'Europe Forest Area Block',\n      view: EuropeForestBlockView,\n      edit: EuropeForestBlockEdit,\n      icon: chartIcon,\n      group: 'forests_specific',\n    },\n    embed_chart: {\n      id: 'embed_chart',\n      title: 'Embed Chart',\n      view: ChartBlockView,\n      edit: ChartBlockEdit,\n      icon: chartIcon,\n      group: 'custom_addons',\n    },\n    plotly_chart: {\n      id: 'plotly_chart',\n      title: 'Plotly Chart',\n      view: PlotlyBlockView,\n      edit: PlotlyBlockEdit,\n      icon: chartIcon,\n      group: 'custom_addons',\n    },\n    tableau: {\n      id: 'tableau',\n      title: 'Tableau',\n      view: tableauBlockView,\n      edit: TableauBlockEdit,\n      icon: chartIcon,\n      group: 'custom_addons',\n    },\n    cktext: {\n      id: 'cktext',\n      group: 'text',\n      title: 'CKEditor',\n      view: TextBlockView,\n      edit: TextBlockEdit,\n      icon: defaultBlocks.blocksConfig.text.icon,\n    },\n  },\n};\n\nexport const portlets = [ForestMetadata, SliderEditButton];\n","module.exports = require(\"shallowequal\");"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AApBA;AAqBA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AADA;AADA;AAMA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AAFA;AAIA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;AADA;AAKA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA1HA;AACA;AA4HA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AACA;AAQA,iBAEA;AAEA;AACA;AAAA;AAjBA;AAkBA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAKA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;AAIA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAFA;AACA;AASA;AAAA;AAAA;AACA;AACA;AAEA;AAhEA;AACA;AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AArPA;AACA;AAuPA;AACA;AAEA;;;;;;;;;;;;ACpRA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AAEA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAEA;AAIA;AANA;AAeA;AAEA;AAEA;AACA;AACA;AAJA;AAOA;AAEA;AAFA;AATA;AACA;AAeA;AAEA;AAEA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AAJA;AAMA;AAEA;AAFA;AAdA;AAoBA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAjBA;AAuBA;AAEA;AAGA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA1CA;AATA;AA8DA;;;;;;;;;;;AChMA;;;;A","sourceRoot":""}