{"version":3,"file":"main.0889bb49b58dda5fbb33.hot-update.js","sources":["webpack:///./src/components/manage/Slider/Edit.jsx","webpack:///./src/components/manage/Widgets/CKEditor.jsx","webpack:///./src/config.js","webpack:///./src/customizations/components/theme/View/ListingView.jsx"],"sourcesContent":["import Dropzone from 'react-dropzone';\nimport Editor from '@plone/volto/components/manage/Blocks/Text/Edit';\nimport React, { Component } from 'react';\nimport clearIcon from '@plone/volto/icons/clear.svg';\nimport penIcon from '@plone/volto/icons/pen.svg';\nimport { Grid, Button, Item, Dimmer, Loader, Message } from 'semantic-ui-react';\nimport { Icon as VoltoIcon } from '@plone/volto/components';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  createAttachment,\n  getAllAttachments,\n  updateAttachment,\n  deleteAttachment,\n} from '~/actions';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { settings } from '~/config';\nimport { withRouter } from 'react-router-dom';\nimport redraft from 'redraft';\nimport ReactDOMServer from 'react-dom/server';\n\n// import { convertFromRaw, convertToRaw, EditorState } from 'draft-js';\n// import Editor from 'draft-js-plugins-editor';\n\nconst CONTAINER = 'slider-images';\n\nclass SlideEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editing: false,\n      editorState: null,\n    };\n    this.save = this.save.bind(this);\n    this.onChangeBlock = this.onChangeBlock.bind(this);\n    this.sendDelete = this.sendDelete.bind(this);\n  }\n\n  onChangeBlock(id, data) {\n    this.setState({\n      editorState: data,\n    });\n    console.log(arguments);\n  }\n\n  sendDelete() {\n    this.props.onDelete(this.props.slide['@id']);\n  }\n\n  save() {\n    const text = ReactDOMServer.renderToStaticMarkup(\n      redraft(\n        this.state.editorState.text,\n        settings.ToHTMLRenderers,\n        settings.ToHTMLOptions,\n      ),\n    );\n    this.setState({ editing: false }, () => {\n      this.props.onChange(this.props.slide['@id'], text);\n    });\n  }\n\n  nop() {}\n\n  node = React.createRef();\n\n  render() {\n    const slide = this.props.slide;\n    return (\n      <div ref={this.node}>\n        <Item>\n          <Grid cols={12}>\n            <Grid.Row>\n              <Grid.Column width={2}>\n                <Item.Image\n                  src={flattenToAppURL(slide.file.scales.thumb.download)}\n                />\n              </Grid.Column>\n              <Grid.Column width={8}>\n                {this.state.editing ? (\n                  <Editor\n                    index={this.props.index}\n                    detached={true}\n                    selected={false}\n                    block={slide['@id']}\n                    onAddBlock={this.nop}\n                    onChangeBlock={this.onChangeBlock}\n                    onDeleteBlock={this.nop}\n                    onFocusPreviousBlock={this.nop}\n                    onFocusNextBlock={this.nop}\n                    onSelectBlock={this.nop}\n                    onMutateBlock={this.nop}\n                    data={slide.text || {}}\n                    blockNode={this.node}\n                  />\n                ) : (\n                  <div>{slide.text}</div>\n                )}\n              </Grid.Column>\n              <Grid.Column width={2}>\n                {!this.state.editing && (\n                  <Button\n                    size=\"mini\"\n                    onClick={() => this.setState({ editing: true })}\n                  >\n                    <VoltoIcon size=\"10\" name={penIcon} />\n                    Edit\n                  </Button>\n                )}\n                {this.state.editing && (\n                  <Button size=\"mini\" onClick={this.save}>\n                    <VoltoIcon size=\"10\" name={penIcon} />\n                    Save\n                  </Button>\n                )}\n                <Button size=\"mini\" onClick={this.sendDelete}>\n                  <VoltoIcon size=\"10\" name={clearIcon} />\n                  Delete\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Item>\n      </div>\n    );\n  }\n}\n\nclass EditSlider extends Component {\n  constructor(props) {\n    super(props);\n    console.log('editslider props', props);\n    this.state = {\n      uploading: false,\n    };\n\n    this.onDrop = this.onDrop.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n  }\n\n  onDrop(acceptedFiles) {\n    console.log('ondrop props', this.props);\n    this.setState({ uploading: true });\n    acceptedFiles.forEach(file => {\n      readAsDataURL(file).then(data => {\n        const fields = data.match(/^data:(.*);(.*),(.*)$/);\n\n        this.props.createAttachment(\n          `${getBaseUrl(this.props.pathname)}/@attachments`,\n          {\n            '@container': CONTAINER,\n            text: file.name,\n            file: {\n              data: fields[3],\n              encoding: fields[2],\n              'content-type': fields[1],\n              filename: file.name,\n            },\n          },\n        );\n      });\n    });\n  }\n\n  onDelete(path) {\n    this.props.deleteAttachment(path.replace(settings.apiPath, ''));\n  }\n\n  componentDidMount() {\n    const url = `${getBaseUrl(this.props.pathname)}/@attachments`;\n    this.props.getAllAttachments(url);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.pathname === prevProps.pathname) return;\n    const url = `${getBaseUrl(this.props.pathname)}/@attachments`;\n    this.props.getAllAttachments(url);\n  }\n\n  onChange(id, data) {\n    this.props.saveAttachment(id, data);\n    console.log('on change', data);\n  }\n\n  render() {\n    console.log('props attachments', this.props.attachments);\n    return (\n      <div>\n        <Dropzone onDrop={this.onDrop} className=\"dropzone\">\n          <Message>\n            {(this.state.uploading && (\n              <Dimmer active>\n                <Loader indeterminate>Uploading</Loader>\n              </Dimmer>\n            )) || <div>Drag files here</div>}\n          </Message>\n        </Dropzone>\n        <Item.Group divided>\n          {this.props.attachments.map((at, i) => (\n            <SlideEditor\n              key={at['@id']}\n              slide={at}\n              index={i}\n              onChange={this.onChange}\n              onDelete={this.onDelete}\n            />\n          ))}\n        </Item.Group>\n        {this.props.attach_errors || ''}\n        {this.props.data.url ? (\n          <p>\n            <img\n              src={\n                this.props.data.url.includes(settings.apiPath)\n                  ? `${flattenToAppURL(this.props.data.url)}/@@images/image`\n                  : this.props.data.url\n              }\n              alt=\"\"\n            />\n          </p>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction getSliderImages(attachments) {\n  if (!attachments) return [];\n\n  const atch = attachments.attachments || [];\n  const slider = (atch && atch.find(el => el['@id'] === 'slider-images')) || [];\n  return (slider && slider.items) || [];\n}\n\nexport default compose(\n  connect(\n    (state, props) => ({\n      data: {},\n      attachments: getSliderImages(state.attachments || {}),\n      pathname: props.location.pathname,\n      attach_errors: state.attachments.errors,\n    }),\n    {\n      createAttachment,\n      getAllAttachments,\n      updateAttachment,\n      deleteAttachment,\n    },\n  ),\n  withRouter,\n)(EditSlider);\n","import React from 'react';\nimport { Form, Grid, Label } from 'semantic-ui-react';\nimport { map } from 'lodash';\n\nconst CKText = ({\n  id,\n  title,\n  required,\n  description,\n  error,\n  value,\n  onChange,\n  fieldSet,\n}) => {\n  if (__SERVER__) return <div />;\n  const CKEditor = require('@ckeditor/ckeditor5-react');\n  const ClassicEditor = require('@ckeditor/ckeditor5-build-classic');\n\n  const editorConfiguration = {\n    heading: {\n      options: [\n        // {\n        //   model: 'paragraph',\n        //   title: 'Paragraph Tibi',\n        //   class: 'ck-heading_paragraph',\n        // },\n        {\n          model: 'heading5',\n          view: 'h5',\n          title: 'Block Title (H5)',\n          class: 'ck-heading_heading5',\n        },\n        {\n          model: 'block_description',\n          view: {\n            name: 'div',\n            classes: 'chart-highlight',\n          },\n          title: 'Block Description',\n          class: 'chart-highlight',\n        },\n        // {\n        //   model: 'heading2',\n        //   view: 'h2',\n        //   title: 'Heading 2',\n        //   class: 'ck-heading_heading2',\n        // },\n      ],\n    },\n  };\n\n  return (\n    <Form.Field\n      inline\n      required={required}\n      error={error ? error.length > 0 : false}\n      id={`${fieldSet || 'field'}-${id}`}\n    >\n      <Grid>\n        <Grid.Row stretched>\n          <Grid.Column width=\"4\">\n            <div className=\"wrapper\">\n              <label htmlFor={`field-${id}`}>{title}</label>\n            </div>\n          </Grid.Column>\n          <Grid.Column width=\"8\">\n            <CKEditor\n              id={`field-${id}`}\n              name={id}\n              config={editorConfiguration}\n              editor={ClassicEditor}\n              data={value || ''}\n              onInit={editor => {}}\n              onChange={(event, editor) => onChange(id, editor.getData())}\n              onBlur={(event, editor) => {}}\n              onFocus={(event, editor) => {}}\n            />\n            {map(error, message => (\n              <Label key={message} basic color=\"red\" pointing>\n                {message}\n              </Label>\n            ))}\n          </Grid.Column>\n        </Grid.Row>\n        {description && (\n          <Grid.Row stretched>\n            <Grid.Column stretched width=\"12\">\n              <p className=\"help\">{description}</p>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n      </Grid>\n    </Form.Field>\n  );\n};\n\nexport default CKText;\n","import React from 'react';\n\nimport {\n  settings as defaultSettings,\n  views as defaultViews,\n  widgets as defaultWidgets,\n  blocks as defaultBlocks,\n} from '@plone/volto/config';\n\nimport { defineMessages } from 'react-intl';\nimport TokenWidget from '@plone/volto/components/manage/Widgets/TokenWidget';\nimport HiddenWidget from '~/components/manage/Widgets/Hidden';\nimport CKEditorWidget from '~/components/manage/Widgets/CKEditor';\nimport ChartWidget from '~/components/manage/Widgets/Chart';\n\nimport ChartBlockEdit from '~/components/manage/Blocks/ChartBlock/ChartBlockEdit';\nimport ChartBlockView from '~/components/manage/Blocks/ChartBlock/ChartBlockView';\n\nimport EuropeCompareBlockEdit from '~/components/manage/Blocks/EuropeCompareBlock/Edit';\nimport EuropeCompareBlockView from '~/components/manage/Blocks/EuropeCompareBlock/View';\n\nimport EuropeForestBlockEdit from '~/components/manage/Blocks/EuropeForestBlock/Edit';\nimport EuropeForestBlockView from '~/components/manage/Blocks/EuropeForestBlock/View';\n\nimport PlotlyBlockEdit from '~/components/manage/Blocks/PlotlyChart/Edit';\nimport PlotlyBlockView from '~/components/manage/Blocks/PlotlyChart/View';\n\nimport TableauBlockEdit from '~/components/manage/Blocks/TableauBlock/TableauBlockEdit';\nimport tableauBlockView from '~/components/manage/Blocks/TableauBlock/TableauBlockView';\n\nimport TextBlockEdit from '~/components/manage/Blocks/Text/Edit';\nimport TextBlockView from '~/components/manage/Blocks/Text/View';\n\nimport ForestMetadata from '~/components/theme/Portlets/ForestMetadata';\nimport SliderEditButton from '~/components/manage/Slider/Portlet';\n\n// Display types\n// import CountryView from '~/components/theme/CountryView/CountryView';\n// import CountryPageView from '~/components/theme/CountryPageView/CountryPageView';\nimport HomepageView from '~/components/theme/HomepageView/HomepageView';\nimport VisualizationView from '~/components/theme/VisualizationView/View';\n\nimport createInlineStyleButton from 'draft-js-buttons/lib/utils/createInlineStyleButton';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport underlineSVG from '@plone/volto/icons/underline.svg';\nimport chartIcon from '@plone/volto/icons/world.svg';\n\nimport { layoutViews } from '~/../volto-mosaic/src';\n\nconst Underline = createInlineStyleButton({\n  style: 'UNDERLINE',\n  children: <Icon name={underlineSVG} size=\"24px\" />,\n});\n\nexport const settings = {\n  ...defaultSettings,\n  richTextEditorInlineToolbarButtons: [\n    Underline,\n    ...defaultSettings.richTextEditorInlineToolbarButtons,\n  ],\n  nonContentRoutes: [\n    // handled differently in getBaseUrl\n    ...defaultSettings.nonContentRoutes,\n    '/manage-slider',\n    '/mosaic-settings-view',\n    '/data-providers-view',\n  ],\n};\n\nexport const views = {\n  ...defaultViews,\n  layoutViews: {\n    ...defaultViews.layoutViews,\n    // full_view: CountryView,\n    // country_tab_view: CountryPageView,\n    homepage_view: HomepageView,\n    ...layoutViews,\n  },\n  contentTypesViews: {\n    ...defaultViews.contentTypesViews,\n    visualization: VisualizationView,\n  },\n};\n\n// read @plone/volto/components/manage/Form/Field.jsx to understand this\nexport const widgets = {\n  ...defaultWidgets,\n  vocabulary: {\n    ...defaultWidgets.vocabulary,\n    'fise.topics': TokenWidget,\n    'fise.keywords': TokenWidget,\n    'fise.publishers': TokenWidget,\n  },\n  id: {\n    ...defaultWidgets.id,\n    blocks: HiddenWidget,\n    blocks_layout: HiddenWidget,\n    visualization: ChartWidget,\n  },\n  widget: {\n    ...defaultWidgets.widget,\n    cktext: CKEditorWidget,\n  },\n};\n\ndefineMessages({\n  custom_addons: {\n    id: 'custom_addons',\n    defaultMessage: 'Custom Addons',\n  },\n  plotly_chart: {\n    id: 'plotly_chart',\n    defaultMessage: 'Plotly Chart',\n  },\n  demo_chart: {\n    id: 'demo_chart',\n    defaultMessage: 'Demo Chart',\n  },\n  tableau: {\n    id: 'tableau',\n    defaultMessage: 'Tableau',\n  },\n  forests_specific: {\n    id: 'forests_specific',\n    defaultMessage: 'Forests Specific Blocks',\n  },\n});\n\nconsole.log('alalalala', defaultBlocks)\n\nexport const blocks = {\n  ...defaultBlocks,\n\n  groupBlocksOrder: [\n    ...defaultBlocks.groupBlocksOrder,\n    { id: 'custom_addons', title: 'Custom addons' },\n    { id: 'forests_specific', title: 'Forests Specific Blocks' },\n  ],\n\n  blocksConfig: {\n    ...defaultBlocks.blocksConfig,\n    europe_compare_block: {\n      id: 'europe_compare_block',\n      title: 'Europe Compare Block',\n      view: EuropeCompareBlockView,\n      edit: EuropeCompareBlockEdit,\n      icon: chartIcon,\n      group: 'forests_specific',\n    },\n    europe_forest_block: {\n      id: 'europe_forest_block',\n      title: 'Europe Forest Area Block',\n      view: EuropeForestBlockView,\n      edit: EuropeForestBlockEdit,\n      icon: chartIcon,\n      group: 'forests_specific',\n    },\n    embed_chart: {\n      id: 'embed_chart',\n      title: 'Embed Chart',\n      view: ChartBlockView,\n      edit: ChartBlockEdit,\n      icon: chartIcon,\n      group: 'custom_addons',\n    },\n    plotly_chart: {\n      id: 'plotly_chart',\n      title: 'Plotly Chart',\n      view: PlotlyBlockView,\n      edit: PlotlyBlockEdit,\n      icon: chartIcon,\n      group: 'custom_addons',\n    },\n    tableau: {\n      id: 'tableau',\n      title: 'Tableau',\n      view: tableauBlockView,\n      edit: TableauBlockEdit,\n      icon: chartIcon,\n      group: 'custom_addons',\n    },\n    cktext: {\n      id: 'cktext',\n      group: 'text',\n      title: 'CKEditor',\n      view: TextBlockView,\n      edit: TextBlockEdit,\n      icon: defaultBlocks.blocksConfig.text.icon,\n    },\n  },\n};\n\nexport const portlets = [ForestMetadata, SliderEditButton];\n","/**\n * Document view component.\n * @module components/theme/View/ListingView\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { getLocalnavigation } from '~/actions';\nimport { connect } from 'react-redux';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Container, Image, Grid } from 'semantic-ui-react';\nimport { map } from 'lodash';\n\nimport { settings, blocks } from '~/config';\n\nimport {\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  hasBlocksData,\n} from '@plone/volto/helpers';\n\nconst messages = defineMessages({\n  unknownBlock: {\n    id: 'Unknown Block',\n    defaultMessage: 'Unknown Block {block}',\n  },\n});\n\nclass ListingView extends Component {\n  static propTypes = {\n    localNavigation: PropTypes.any,\n    getLocalnavigation: PropTypes.func.isRequired,\n    pathname: PropTypes.any,\n    content: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      text: PropTypes.shape({\n        data: PropTypes.string,\n      }),\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          '@id': PropTypes.string,\n          '@type': PropTypes.string,\n          description: PropTypes.string,\n          review_state: PropTypes.string,\n          title: PropTypes.string,\n          url: PropTypes.string,\n        }),\n      ),\n    }).isRequired,\n  };\n\n  componentDidMount() {\n    this.props.getLocalnavigation(flattenToAppURL(this.props.content['@id']));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.pathname !== this.props.pathname) {\n      this.props.getLocalnavigation(flattenToAppURL(this.props.pathname));\n    }\n  }\n\n  render() {\n    const content = this.props.content;\n    const intl = this.props.intl;\n    const blocksFieldname = getBlocksFieldname(content);\n    const blocksLayoutFieldname = getBlocksLayoutFieldname(content);\n    const localNavigation =\n      (this.props.localNavigation.items &&\n        this.props.localNavigation.items.filter(\n          item => item.title !== 'Home',\n        )) ||\n      [];\n    let pageTemplate = (\n      <Grid columns={3} className=\"folderWithContent\">\n        <Grid.Column tablet={0} largeScreen={3} widescreen={3}></Grid.Column>\n        <Grid.Column tablet={12} largeScreen={6} widescreen={6}>\n          {hasBlocksData(content) ? (\n            <div id=\"page-document\">\n              <Helmet title={content.title} />\n              {map(content[blocksLayoutFieldname].items, block => {\n                const Block =\n                  blocks.blocksConfig[\n                    (content[blocksFieldname]?.[block]?.['@type'])\n                  ]?.['view'] || null;\n                return Block !== null ? (\n                  <Block\n                    key={block}\n                    id={block}\n                    properties={content}\n                    data={content[blocksFieldname][block]}\n                  />\n                ) : (\n                  <div key={block}>\n                    {intl.formatMessage(messages.unknownBlock, {\n                      block: content[blocksFieldname]?.[block]?.['@type'],\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <Container id=\"page-document\">\n              <Helmet title={content.title} />\n              {/* <h1 className=\"documentFirstHeading\">{content.title}</h1>\n              {content.description && (\n                <p className=\"documentDescription\">{content.description}</p>\n              )} */}\n              {content.image && (\n                <Image\n                  className=\"document-image\"\n                  src={content.image.scales.thumb.download}\n                  floated=\"right\"\n                />\n              )}\n              {content.remoteUrl && (\n                <span>\n                  The link address is:\n                  <a href={content.remoteUrl}>{content.remoteUrl}</a>\n                </span>\n              )}\n              {content.text && (\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: content.text.data.replace(\n                      /a href=\"([^\"]*\\.[^\"]*)\"/g,\n                      `a href=\"${settings.apiPath}$1/download/file\"`,\n                    ),\n                  }}\n                />\n              )}\n            </Container>\n          )}\n        </Grid.Column>\n        <Grid.Column tablet={6} largeScreen={3} widescreen={3}>\n          <ul className=\"localNavigation\">\n            {localNavigation.map(item => (\n              <li>\n                <Link to={flattenToAppURL(item['@id'])} key={item['@id']}>\n                  {item.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </Grid.Column>\n      </Grid>\n    );\n    if (!localNavigation.length) {\n      pageTemplate = hasBlocksData(content) ? (\n        <div id=\"page-document\">\n          <Helmet title={content.title} />\n          {map(content[blocksLayoutFieldname].items, block => {\n            const Block =\n              blocks.blocksConfig[(content[blocksFieldname]?.[block]?.['@type'])]?.[\n                'view'\n              ] || null;\n            return Block !== null ? (\n              <Block\n                key={block}\n                id={block}\n                properties={content}\n                data={content[blocksFieldname][block]}\n              />\n            ) : (\n              <div key={block}>\n                {intl.formatMessage(messages.unknownBlock, {\n                  block: content[blocksFieldname]?.[block]?.['@type'],\n                })}\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <Container id=\"page-document\">\n          <Helmet title={content.title} />\n          <h1 className=\"documentFirstHeading\">{content.title}</h1>\n          {content.description && (\n            <p className=\"documentDescription\">{content.description}</p>\n          )}\n          {content.image && (\n            <Image\n              className=\"document-image\"\n              src={content.image.scales.thumb.download}\n              floated=\"right\"\n            />\n          )}\n          {content.remoteUrl && (\n            <span>\n              The link address is:\n              <a href={content.remoteUrl}>{content.remoteUrl}</a>\n            </span>\n          )}\n          {content.text && (\n            <div\n              dangerouslySetInnerHTML={{\n                __html: content.text.data.replace(\n                  /a href=\"([^\"]*\\.[^\"]*)\"/g,\n                  `a href=\"${settings.apiPath}$1/download/file\"`,\n                ),\n              }}\n            />\n          )}\n        </Container>\n      );\n    }\n    // return (\n    //   <Container id=\"page-home\">\n    //     <Helmet title={content.title} />\n    //     <section id=\"content-core\">\n    //       {content.items.map(item => (\n    //         <article key={item.url}>\n    //           <h2>\n    //             <Link to={item.url} title={item['@type']}>\n    //               {item.title}\n    //             </Link>\n    //           </h2>\n    //           {item.description && <p>{item.description}</p>}\n    //         </article>\n    //       ))}\n    //     </section>\n    //   </Container>\n    // );\n    return pageTemplate;\n  }\n}\n\nexport default connect(\n  (state, props) => ({\n    localNavigation: state.localnavigation.items,\n    pathname: props.location.pathname,\n  }),\n  { getLocalnavigation },\n)(injectIntl(ListingView));\n"],"mappings":"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","sourceRoot":""}