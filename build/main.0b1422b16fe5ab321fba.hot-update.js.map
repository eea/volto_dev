{"version":3,"file":"main.0b1422b16fe5ab321fba.hot-update.js","sources":["webpack:///./src/components/manage/Slider/Edit.jsx","webpack:///./src/components/manage/Tiles/ChartTile/ChartTileEdit.jsx","webpack:///./src/components/manage/Tiles/ChartTile/ChartTileView.jsx","webpack:///./src/components/manage/Tiles/EuropeCompareTile/Edit.jsx","webpack:///./src/components/manage/Tiles/EuropeCompareTile/View.jsx","webpack:///./src/components/manage/Tiles/EuropeForestTile/Edit.jsx","webpack:///./src/components/manage/Tiles/EuropeForestTile/View.jsx","webpack:///./src/components/manage/Tiles/PlotlyChart/Edit.jsx","webpack:///./src/components/manage/Tiles/PlotlyChart/View.jsx","webpack:///./src/components/manage/Tiles/TableauTile/TableauTileEdit.jsx","webpack:///./src/components/manage/Tiles/Text/Edit.jsx","webpack:///./src/components/manage/Tiles/Text/View.jsx","webpack:///./src/components/manage/Widgets/CKEditor.jsx","webpack:///./src/components/manage/Widgets/ChartEditor.jsx","webpack:///./src/components/theme/HomepageView/HomepageView.jsx","webpack:///./src/components/theme/TestViews/MosaicSettingsView.jsx","webpack:///./src/config.js","webpack:///./src/customizations/components/theme/View/ListingView.jsx"],"sourcesContent":["import Dropzone from 'react-dropzone';\nimport Editor from '@plone/volto/components/manage/Blocks/Text/Edit';\nimport React, { Component } from 'react';\nimport clearIcon from '@plone/volto/icons/clear.svg';\nimport penIcon from '@plone/volto/icons/pen.svg';\nimport { Grid, Button, Item, Dimmer, Loader, Message } from 'semantic-ui-react';\nimport { Icon as VoltoIcon } from '@plone/volto/components';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  createAttachment,\n  getAllAttachments,\n  updateAttachment,\n  deleteAttachment,\n} from '~/actions';\nimport { flattenToAppURL, getBaseUrl } from '@plone/volto/helpers';\nimport { readAsDataURL } from 'promise-file-reader';\nimport { settings } from '~/config';\nimport { withRouter } from 'react-router-dom';\nimport redraft from 'redraft';\nimport ReactDOMServer from 'react-dom/server';\n\n// import { convertFromRaw, convertToRaw, EditorState } from 'draft-js';\n// import Editor from 'draft-js-plugins-editor';\n\nconst CONTAINER = 'slider-images';\n\nclass SlideEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editing: false,\n      editorState: null,\n    };\n    this.save = this.save.bind(this);\n    this.onChangeTile = this.onChangeTile.bind(this);\n    this.sendDelete = this.sendDelete.bind(this);\n  }\n\n  onChangeTile(id, data) {\n    this.setState({\n      editorState: data,\n    });\n    console.log(arguments);\n  }\n\n  sendDelete() {\n    this.props.onDelete(this.props.slide['@id']);\n  }\n\n  save() {\n    const text = ReactDOMServer.renderToStaticMarkup(\n      redraft(\n        this.state.editorState.text,\n        settings.ToHTMLRenderers,\n        settings.ToHTMLOptions,\n      ),\n    );\n    this.setState({ editing: false }, () => {\n      this.props.onChange(this.props.slide['@id'], text);\n    });\n  }\n\n  nop() {}\n\n  node = React.createRef();\n\n  render() {\n    const slide = this.props.slide;\n    return (\n      <div ref={this.node}>\n        <Item>\n          <Grid cols={12}>\n            <Grid.Row>\n              <Grid.Column width={2}>\n                <Item.Image\n                  src={flattenToAppURL(slide.file.scales.thumb.download)}\n                />\n              </Grid.Column>\n              <Grid.Column width={8}>\n                {this.state.editing ? (\n                  <Editor\n                    index={this.props.index}\n                    detached={true}\n                    selected={false}\n                    block={slide['@id']}\n                    onAddTile={this.nop}\n                    onChangeTile={this.onChangeTile}\n                    onDeleteTile={this.nop}\n                    onFocusPreviousTile={this.nop}\n                    onFocusNextTile={this.nop}\n                    onSelectTile={this.nop}\n                    onMutateTile={this.nop}\n                    data={slide.text || {}}\n                    blockNode={this.node}\n                  />\n                ) : (\n                  <div>{slide.text}</div>\n                )}\n              </Grid.Column>\n              <Grid.Column width={2}>\n                {!this.state.editing && (\n                  <Button\n                    size=\"mini\"\n                    onClick={() => this.setState({ editing: true })}\n                  >\n                    <VoltoIcon size=\"10\" name={penIcon} />\n                    Edit\n                  </Button>\n                )}\n                {this.state.editing && (\n                  <Button size=\"mini\" onClick={this.save}>\n                    <VoltoIcon size=\"10\" name={penIcon} />\n                    Save\n                  </Button>\n                )}\n                <Button size=\"mini\" onClick={this.sendDelete}>\n                  <VoltoIcon size=\"10\" name={clearIcon} />\n                  Delete\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Item>\n      </div>\n    );\n  }\n}\n\nclass EditSlider extends Component {\n  constructor(props) {\n    super(props);\n    console.log('editslider props', props);\n    this.state = {\n      uploading: false,\n    };\n\n    this.onDrop = this.onDrop.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n  }\n\n  onDrop(acceptedFiles) {\n    console.log('ondrop props', this.props);\n    this.setState({ uploading: true });\n    acceptedFiles.forEach(file => {\n      readAsDataURL(file).then(data => {\n        const fields = data.match(/^data:(.*);(.*),(.*)$/);\n\n        this.props.createAttachment(\n          `${getBaseUrl(this.props.pathname)}/@attachments`,\n          {\n            '@container': CONTAINER,\n            text: file.name,\n            file: {\n              data: fields[3],\n              encoding: fields[2],\n              'content-type': fields[1],\n              filename: file.name,\n            },\n          },\n        );\n      });\n    });\n  }\n\n  onDelete(path) {\n    this.props.deleteAttachment(path.replace(settings.apiPath, ''));\n  }\n\n  componentDidMount() {\n    const url = `${getBaseUrl(this.props.pathname)}/@attachments`;\n    this.props.getAllAttachments(url);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.pathname === prevProps.pathname) return;\n    const url = `${getBaseUrl(this.props.pathname)}/@attachments`;\n    this.props.getAllAttachments(url);\n  }\n\n  onChange(id, data) {\n    this.props.saveAttachment(id, data);\n    console.log('on change', data);\n  }\n\n  render() {\n    console.log('props attachments', this.props.attachments);\n    return (\n      <div>\n        <Dropzone onDrop={this.onDrop} className=\"dropzone\">\n          <Message>\n            {(this.state.uploading && (\n              <Dimmer active>\n                <Loader indeterminate>Uploading</Loader>\n              </Dimmer>\n            )) || <div>Drag files here</div>}\n          </Message>\n        </Dropzone>\n        <Item.Group divided>\n          {this.props.attachments.map((at, i) => (\n            <SlideEditor\n              key={at['@id']}\n              slide={at}\n              index={i}\n              onChange={this.onChange}\n              onDelete={this.onDelete}\n            />\n          ))}\n        </Item.Group>\n        {this.props.attach_errors || ''}\n        {this.props.data.url ? (\n          <p>\n            <img\n              src={\n                this.props.data.url.includes(settings.apiPath)\n                  ? `${flattenToAppURL(this.props.data.url)}/@@images/image`\n                  : this.props.data.url\n              }\n              alt=\"\"\n            />\n          </p>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction getSliderImages(attachments) {\n  if (!attachments) return [];\n\n  const atch = attachments.attachments || [];\n  const slider = (atch && atch.find(el => el['@id'] === 'slider-images')) || [];\n  return (slider && slider.items) || [];\n}\n\nexport default compose(\n  connect(\n    (state, props) => ({\n      data: {},\n      attachments: getSliderImages(state.attachments || {}),\n      pathname: props.location.pathname,\n      attach_errors: state.attachments.errors,\n    }),\n    {\n      createAttachment,\n      getAllAttachments,\n      updateAttachment,\n      deleteAttachment,\n    },\n  ),\n  withRouter,\n)(EditSlider);\n","import { getChartDataFromVisualization } from '~/actions';\r\nimport { searchContent } from '@plone/volto/actions';\r\nimport { connect } from 'react-redux';\r\nimport Loadable from 'react-loadable';\r\nimport React, { Component } from 'react';\r\nimport { Grid, Form as UiForm } from 'semantic-ui-react';\r\nimport { Field } from '@plone/volto/components'; // EditTile\r\n\r\nconst LoadablePlot = Loadable({\r\n  loader: () => import('react-plotly.js'),\r\n  loading() {\r\n    return <div>Loading chart...</div>;\r\n  },\r\n});\r\n\r\n// const data = [\r\n//   { name: 'Finland', 'Total area': 4000, 'Forest area': 2400 },\r\n//   { name: 'Sweeden', 'Total area': 3000, 'Forest area': 1398 },\r\n//   { name: 'Slovenia', 'Total area': 2000, 'Forest area': 9800 },\r\n//   { name: 'Estonia', 'Total area': 2780, 'Forest area': 3908 },\r\n//   { name: 'Austria', 'Total area': 1890, 'Forest area': 4800 },\r\n//   { name: 'Slovakia', 'Total area': 1890, 'Forest area': 4800 },\r\n// ];\r\n\r\n/*\r\n * Pick up a chart from an existing visualization, add text\r\n */\r\nclass ChartPick extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const localChartData = props.data.chartData || {};\r\n\r\n    let text = props.data['chart-text'];\r\n    if (typeof text !== 'string') text = '';\r\n\r\n    this.state = {\r\n      localChartData,\r\n      text,\r\n      ...props.data\r\n    };\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.updateData = this.updateData.bind(this);\r\n    // this.getChartData = this.getChartData.bind(this);\r\n    this.handleChangeVisualization = this.handleChangeVisualization.bind(this);\r\n  }\r\n\r\n  updateData(obj) {\r\n    this.setState(obj, this.onSubmit);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.props.onChangeTile(this.props.block, {\r\n      ...this.props.data,\r\n      'chart-text': this.state.text,\r\n      chartData: this.state.localChartData,\r\n      ...this.state,\r\n    });\r\n  }\r\n\r\n  handleChangeVisualization(id, path) {\r\n    this.props.getChartDataFromVisualization(path);\r\n  }\r\n\r\n  componentWillMount() {\r\n    // get the existing visualizations\r\n    this.props.searchContent('', {\r\n      object_provides: 'forests.content.interfaces.IDataVisualization',\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    console.log('new props', this.props);\r\n    if (this.props.remoteChartData !== prevProps.remoteChartData) {\r\n      this.setState({\r\n        localChartData: this.props.remoteChartData,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log('state in render', this.state);\r\n    return (\r\n      <div className=\"block selected\">\r\n        <div className=\"block-inner-wrapper\">\r\n          <Grid columns={2} divided>\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                {this.state.localChartData && (\r\n                  <LoadablePlot\r\n                    data={this.state.localChartData.data || []}\r\n                    layout={this.state.localChartData.layout || {}}\r\n                    frames={this.state.localChartData.frames || []}\r\n                    config={{ displayModeBar: false }}\r\n                  />\r\n                )}\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <UiForm>\r\n                  <Field\r\n                    title=\"Pick chart from existing visualization\"\r\n                    id=\"chart-data\"\r\n                    choices={this.props.visualizations}\r\n                    required={true}\r\n                    onChange={this.handleChangeVisualization}\r\n                  />\r\n                  <Field\r\n                    title=\"Text\"\r\n                    id=\"chart-text\"\r\n                    widget=\"cktext\"\r\n                    value={this.state.text}\r\n                    required={false}\r\n                    onChange={(e, d) => this.updateData({ text: d })}\r\n                  />\r\n                  <Field\r\n                    title=\"Source\"\r\n                    id=\"chart-source\"\r\n                    type=\"text\"\r\n                    value={this.state.chart_source}\r\n                    required={false}\r\n                    onChange={(e, d) => this.updateData({ chart_source: d })}\r\n                  />\r\n                  <Field\r\n                    title=\"Source Link\"\r\n                    id=\"chart-source-link\"\r\n                    type=\"text\"\r\n                    value={this.state.chart_source_link}\r\n                    required={false}\r\n                    onChange={(e, d) => this.updateData({ chart_source_link: d })}\r\n                  />\r\n                </UiForm>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state, props) => {\r\n    // const chartData = state.data_providers ? state.data_providers.item : {};\r\n    // console.log('connect props', state, props);\r\n    let visualizations = state.search ? state.search.items : [];\r\n    visualizations = visualizations.map(el => [el['@id'], el.title]);\r\n    return {\r\n      visualizations,\r\n      remoteChartData:\r\n        state.chart_data_visualization && state.chart_data_visualization.data,\r\n    };\r\n  },\r\n  { searchContent, getChartDataFromVisualization },\r\n)(ChartPick);\r\n","import Loadable from 'react-loadable';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from 'semantic-ui-react';\n\nconst LoadablePlot = Loadable({\n  loader: () => import('react-plotly.js'),\n  loading() {\n    return <div>Loading chart...</div>;\n  },\n});\n\nclass EmbedChartView extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log('chart data', this.props.data, this.props);\n    let chartData = this.props.data.chartData || [];\n\n    if (typeof chartData === 'string') {\n      try {\n        chartData = JSON.parse(chartData);\n      } catch (error) {\n        console.log('Error in JSON parsing chart data', error);\n        chartData = {};\n      }\n    }\n\n    // TODO: the axis labels need to come from the data\n\n    this.state = {\n      chartData,\n    };\n  }\n\n  render() {\n    let text = this.props.data['chart-text'];\n    if (typeof text !== 'string') text = '';\n    return (\n      <div className=\"chartWrapperView\">\n        <div className=\"block-inner-wrapper\">\n          <Grid>\n            <Grid.Column width={4}>\n              <div className=\"block-text-content\">\n                {text && <div dangerouslySetInnerHTML={{ __html: text }} />}\n              </div>\n            </Grid.Column>\n            <Grid.Column width={8}>\n              {this.state.chartData ? (\n                <LoadablePlot\n                  className=\"embedded-chart\"\n                  data={this.state.chartData.data || []}\n                  layout={{\n                    ...this.state.chartData.layout,\n                    autosize: true,\n                  }}\n                  frames={this.state.chartData.frames || []}\n                  config={{ displayModeBar: false }}\n                  />\n              ) : (\n                <div>No valid data.</div>\n              )}\n            </Grid.Column>\n            <Grid.Column width={12}>\n              <div>\n                <a className=\"discreet\"\n                   href={this.props.data.chart_source_link}>\n                  {this.props.data.chart_source}\n                </a>\n              </div>\n            </Grid.Column>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nEmbedChartView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default EmbedChartView;\n","import React, { Component } from 'react';\nimport { Form as UiForm } from 'semantic-ui-react';\nimport { Field } from '@plone/volto/components'; // EditTile\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n\n    const blockData = props.data;\n\n    this.state = {\n      ...blockData,\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.updateData = this.updateData.bind(this);\n  }\n\n  updateData(obj) {\n    this.setState(obj, this.onSubmit);\n  }\n\n  onSubmit() {\n    this.props.onChangeTile(this.props.block, {\n      ...this.props.data,\n      ...this.state,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"block selected\">\n        <div className=\"block-inner-wrapper\">\n          <UiForm>\n            <Field\n              id=\"europe-block-title\"\n              title=\"Title\"\n              type=\"text\"\n              value={this.state.europe_block_title}\n              required={false}\n              onChange={(e, d) => this.updateData({ europe_block_title: d })}\n            />\n            <Field\n              id=\"europe-forest-area\"\n              title=\"Total forest land\"\n              type=\"text\"\n              value={this.state.europe_forest_area}\n              required={false}\n              onChange={(e, d) => this.updateData({ europe_forest_area: d })}\n              />\n\n            <UiForm.Group widths=\"equal\">\n              <Field\n                id=\"europe-data-1-name\"\n                title=\"Data\"\n                type=\"text\"\n                value={this.state.europe_data_1_name}\n                required={false}\n                onChange={(e, d) => this.updateData({ europe_data_1_name: d })}\n                />\n              <Field\n                id=\"europe-data-1-value\"\n                title=\"Value\"\n                type=\"text\"\n                value={this.state.europe_data_1_value}\n                required={false}\n                onChange={(e, d) => this.updateData({ europe_data_1_value: d })}\n                />\n            </UiForm.Group>\n\n            <UiForm.Group widths=\"equal\">\n              <Field\n                id=\"europe-data-2-name\"\n                title=\"Data\"\n                type=\"text\"\n                value={this.state.europe_data_2_name}\n                required={false}\n                onChange={(e, d) => this.updateData({ europe_data_2_name: d })}\n                />\n              <Field\n                id=\"europe-country-2-value\"\n                title=\"Value\"\n                type=\"text\"\n                value={this.state.europe_data_2_value}\n                required={false}\n                onChange={(e, d) => this.updateData({ europe_data_2_value: d })}\n                />\n            </UiForm.Group>\n\n            <Field\n              id=\"europe-block-source\"\n              title=\"Source\"\n              type=\"text\"\n              value={this.state.europe_text_attribution}\n              required={false}\n              onChange={(e, d) => this.updateData({ europe_text_attribution: d })}\n            />\n\n            <Field\n              id=\"europe-block-link\"\n              title=\"Source link\"\n              type=\"text\"\n              value={this.state.europe_block_link}\n              required={false}\n              onChange={(e, d) => this.updateData({ europe_block_link: d })}\n            />\n          </UiForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Edit;\n","import React, { Component } from 'react';\n// import TableauReport from '~/components/theme/TableauView/TableauReport';\n\nclass View extends Component {\n  render() {\n    console.log('props', this.props);\n    return (\n      <div className=\"forest-block-wrapper\">\n        <div className=\"forest-specific-block forest-comparation\">\n          <h5>{this.props.data.europe_block_title}</h5>\n          <div className=\"land-data-wrapper\">\n            <div className=\"land-data\">\n              <span>{this.props.data.europe_forest_area}</span>\n            </div>\n            <div className=\"land-data-content\">\n              of Europe's land area consists of Forest and Other wooden land\n            </div>\n          </div>\n          <div className=\"ui bulleted list\">\n            <div className=\"item\">\n              {this.props.data.europe_data_1_name}\n              <span>{this.props.data.europe_data_1_value}</span>\n            </div>\n            <div className=\"item\">\n              {this.props.data.europe_data_2_name}\n              <span>{this.props.data.europe_data_2_value}</span>\n            </div>\n          </div>\n          <a className=\"discreet\" href={this.props.data.europe_block_link}>\n            {this.props.data.europe_text_attribution}\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default View;\n","import React, { Component } from 'react';\nimport { Form as UiForm } from 'semantic-ui-react';\nimport { Field } from '@plone/volto/components'; // EditTile\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n\n    const blockData = props.data;\n\n    this.state = {\n      ...blockData,\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.updateData = this.updateData.bind(this);\n  }\n\n  updateData(obj) {\n    this.setState(obj, this.onSubmit);\n  }\n\n  onSubmit() {\n    this.props.onChangeTile(this.props.block, {\n      ...this.props.data,\n      ...this.state,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"block selected\">\n        <div className=\"block-inner-wrapper\">\n          <UiForm>\n            <Field\n              id=\"europe-block-title\"\n              title=\"Title\"\n              type=\"text\"\n              value={this.state.europe_block_title}\n              required={false}\n              onChange={(e, d) => this.updateData({ europe_block_title: d })}\n            />\n\n            <Field\n              id=\"europe-forest-p-eu28\"\n              title=\"Forest area in EU28\"\n              type=\"text\"\n              value={this.state.europe_forest_p_eu28}\n              required={false}\n              onChange={(e, d) => this.updateData({ europe_forest_p_eu28: d })}\n            />\n\n            <Field\n              id=\"europe-forest-l-eu28\"\n              title=\"Total forest area in EU28\"\n              type=\"text\"\n              value={this.state.europe_forest_l_eu28}\n              required={false}\n              onChange={(e, d) => this.updateData({ europe_forest_l_eu28: d })}\n            />\n\n            <Field\n              id=\"europe-forest-p-eea39\"\n              title=\"Forest area in EEA39\"\n              type=\"text\"\n              value={this.state.europe_forest_p_eea39}\n              required={false}\n              onChange={(e, d) => this.updateData({ europe_forest_p_eea39: d })}\n            />\n\n            <Field\n              id=\"europe-forest-l-eea39\"\n              title=\"Total forest area in EEA39\"\n              type=\"text\"\n              value={this.state.europe_forest_l_eea39}\n              required={false}\n              onChange={(e, d) => this.updateData({ europe_forest_l_eea39: d })}\n            />\n\n            <Field\n              id=\"europe-source\"\n              title=\"Source\"\n              type=\"text\"\n              value={this.state.europe_text_attribution}\n              required={false}\n              onChange={(e, d) =>\n                this.updateData({ europe_text_attribution: d })\n              }\n            />\n\n            <Field\n              id=\"europe-block-link\"\n              title=\"Source link\"\n              type=\"text\"\n              value={this.state.europe_block_link}\n              required={false}\n              onChange={(e, d) => this.updateData({ europe_block_link: d })}\n            />\n          </UiForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Edit;\n","import React, { Component } from 'react';\n// import TableauReport from '~/components/theme/TableauView/TableauReport';\n\nclass View extends Component {\n  render() {\n    console.log('props', this.props);\n    return (\n      <div className=\"forest-block-wrapper\">\n        <div className=\"forest-specific-block forest-area-block\">\n          <h5>{this.props.data.europe_block_title}</h5>\n\n          <div className=\"land-data-wrapper eu28-data\">\n            <div className=\"land-data\">\n              <span>{this.props.data.europe_forest_p_eu28}</span>\n            </div>\n            <div className=\"land-data-content\">\n              of Europe's land surface <span>{this.props.data.europe_forest_l_eu28}</span>\n            </div>\n          </div>\n\n          <div className=\"land-data-wrapper eea39-data\">\n            <div className=\"land-data\">\n              <span>{this.props.data.europe_forest_p_eea39}</span>\n            </div>\n            <div className=\"land-data-content\">\n              of Europe's land surface <span>{this.props.data.europe_forest_l_eea39}</span>\n            </div>\n          </div>\n\n          <a className=\"discreet\" href={this.props.data.europe_block_link}>\n            {this.props.data.europe_text_attribution}\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default View;\n","import React, { Component } from 'react';\nimport 'react-chart-editor/lib/react-chart-editor.css';\nimport Loadable from 'react-loadable';\nimport { connect } from 'react-redux';\nimport { searchContent } from '@plone/volto/actions';\nimport { getDataFromProvider } from '~/actions';\nimport { Dropdown } from 'semantic-ui-react';\n\nconst LoadablePlotlyEditor = Loadable({\n  loader: () => import('react-chart-editor'),\n  loading() {\n    return <div>Loading chart editor...</div>;\n  },\n});\n\nconst dataSources = {\n  col1: [1, 2, 3], // eslint-disable-line no-magic-numbers\n  col2: [4, 3, 2], // eslint-disable-line no-magic-numbers\n  col3: [17, 13, 9], // eslint-disable-line no-magic-numbers\n};\n\nfunction getDataSourceOptions(data) {\n  return Object.keys(data).map(name => ({\n    value: name,\n    label: name,\n  }));\n}\n\nconst config = { editable: true };\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n\n    const chartData = this.props.data.chartData || {};\n\n    this.state = {\n      data: chartData.data || [],\n      layout: chartData.layout || [],\n      frames: chartData.frames || [],\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeProvider = this.handleChangeProvider.bind(this);\n    // this.getChartData = this.getChartData.bind(this);\n  }\n\n  onSubmit() {\n    const chartData = {\n      data: this.state.data,\n      layout: this.state.layout,\n      frames: this.state.frames,\n    };\n    this.props.onChangeTile(this.props.block, {\n      ...this.props.data,\n      chartData,\n    });\n  }\n\n  // componentWillReceiveProps(nextProps) {\n  //   console.log('got props', nextProps);\n  // }\n\n  componentWillMount() {\n    this.props.searchContent('', {\n      object_provides: 'forests.content.interfaces.IBasicDataProvider',\n    });\n  }\n\n  handleChange(data, layout, frames) {\n    this.setState({ data, layout, frames }, this.onSubmit);\n  }\n\n  handleChangeProvider(ev, { value }) {\n    this.props.getDataFromProvider(value);\n  }\n\n  render() {\n    const plotly = require('plotly.js/dist/plotly');\n    const selectProviders = this.props.providers.map(el => {\n      return {\n        key: el['@id'],\n        text: el.title,\n        value: el['@id'],\n      };\n    });\n\n    return (\n      <div>\n        {__CLIENT__ ? (\n          <div className=\"block selected\">\n            <div className=\"block-inner-wrapper\">\n              <Dropdown\n                placeholder=\"Select data provider\"\n                fluid\n                selection\n                options={selectProviders}\n                onChange={this.handleChangeProvider}\n              />\n              <LoadablePlotlyEditor\n                data={this.state.data}\n                layout={this.state.layout}\n                config={config}\n                frames={this.state.frames}\n                dataSources={this.props.providerData || dataSources}\n                dataSourceOptions={\n                  this.props.dataSourceOptions ||\n                  getDataSourceOptions(dataSources)\n                }\n                plotly={plotly}\n                onUpdate={this.handleChange}\n                useResizeHandler\n                debug\n                advancedTraceTypeSelector\n              />\n            </div>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state, props) => {\n    const providerData = state.data_providers ? state.data_providers.item : {};\n    return {\n      providers: state.search.items,\n      providerData,\n      dataSourceOptions: getDataSourceOptions(providerData || dataSources),\n    };\n  },\n  { searchContent, getDataFromProvider },\n)(Edit);\n","import Loadable from 'react-loadable';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LoadablePlot = Loadable({\n  loader: () => import('react-plotly.js'),\n  loading() {\n    return <div>Loading chart...</div>;\n  },\n});\n\nclass ChartView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.data.chartData };\n  }\n\n  render() {\n    return (\n      <div className=\"chartWrapperView\">\n        <div className=\"block-inner-wrapper\">\n          <LoadablePlot\n            data={this.state.data}\n            layout={this.state.layout}\n            frames={this.state.frames}\n            config={{ displayModeBar: false }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nChartView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default ChartView;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\n\nimport { ResponsiveContainer } from 'recharts';\n\nimport TableauReport from '~/components/theme/TableauView/TableauReport';\n\n// const url = 'http://public.tableau.com/views/RegionalSampleWorkbook/Storms';\n\nclass StackedBarChart extends Component {\n  constructor(props) {\n    super(props);\n\n    const data = this.props.data.tableauData || {};\n    let show = !__SERVER__ && data ? true : false;\n\n    let filters =\n      data.filters && data.sheetname ? data.filters[data.sheetname] : {};\n\n    this.state = {\n      show,\n      tableauData: data,\n      url: data.url || '',\n      filters,\n      sheetname: data.sheetname || '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.getChartData = this.getChartData.bind(this);\n    this.saveCallback = this.saveCallback.bind(this);\n  }\n\n  handleChange(e) {\n    let data = e.target.value;\n    try {\n      data = e.target.value;\n      this.setState(\n        {\n          url: data,\n        },\n        // this.onSubmit,\n      );\n    } catch {\n      console.warning('Invalid JSON data: ', data);\n    }\n  }\n\n  onSubmit() {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      tableauData: this.state.tableauData,\n    });\n    this.props.handleClose();\n  }\n\n  saveCallback(saveData) {\n    console.log('Received save data', saveData);\n    let stateData = JSON.parse(JSON.stringify(this.state));\n    this.setState(\n      {\n        tableauData: saveData,\n      },\n      this.onSubmit,\n    );\n  }\n\n  getChartData() {\n    let tableauData = this.state.tableauData;\n    if (typeof tableauData == 'string') {\n      try {\n        tableauData = tableauData;\n      } catch (error) {\n        console.log(error);\n        tableauData = {};\n      }\n    }\n    console.log(tableauData);\n    return tableauData;\n  }\n\n  render() {\n    if (__SERVER__) return '';\n    // const TableauReport = require('tableau-react');\n    console.log(this.state);\n    return (\n      <div className=\"block chartWrapperEdit\">\n        <div className=\"block-inner-wrapper\">\n          {this.state.show && this.state.url ? (\n            <div className=\"image-add\">\n              <ResponsiveContainer>\n                <TableauReport\n                  url={this.state.url}\n                  filters={this.state.filters}\n                  sheetname={this.state.sheetname}\n                  callback={this.saveCallback}\n                />\n              </ResponsiveContainer>\n            </div>\n          ) : (\n            <div className=\"image-add\">\n              <div class=\"ui segment\">\n                <div class=\"ui placeholder\">\n                  <div class=\"image header\">\n                    <div class=\"line\" />\n                    <div class=\"line\" />\n                  </div>\n                  <div class=\"paragraph\">\n                    <div class=\"medium line\" />\n                    <div class=\"short line\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          <div>\n            <label>Enter JSON data</label>\n            <input\n              type=\"text\"\n              defaultValue={this.state.url}\n              placeholder=\"Enter tableau URL\"\n              onChange={this.handleChange}\n            />\n            <Button onClick={() => this.setState({ show: true })}>\n              Show dashboard\n            </Button>\n            <Button onClick={this.onSubmit}>Save</Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StackedBarChart;\n","/**\n * Edit text block.\n * @module components/manage/Tiles/Title/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport cx from 'classnames';\n\n// import Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n// import Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n// import Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n// import Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\n/**\n * Edit text block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    detached: PropTypes.bool,\n    index: PropTypes.number.isRequired,\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    onAddTile: PropTypes.func.isRequired,\n    onChangeTile: PropTypes.func.isRequired,\n    onDeleteTile: PropTypes.func.isRequired,\n    onMutateTile: PropTypes.func.isRequired,\n    onFocusPreviousTile: PropTypes.func.isRequired,\n    onFocusNextTile: PropTypes.func.isRequired,\n    onSelectTile: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    detached: false,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n\n    if (!__SERVER__) {\n      const htmltext = (props.data && props.data.cktext) || '';\n\n      this.state = {\n        htmltext,\n      };\n    }\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(event, editor) {\n    const cktext = editor.getData();\n    this.props.onChangeTile(this.props.block, {\n      ...this.props.data,\n      cktext,\n    });\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (__SERVER__) {\n      return <div />;\n    }\n\n    const CKEditor = require('@ckeditor/ckeditor5-react');\n    const ClassicEditor = require('@ckeditor/ckeditor5-build-classic');\n    // console.log(\n    //   'plugins',\n    //   ClassicEditor.builtinPlugins.map(plugin => plugin.pluginName),\n    // );\n    // const ClassicEditor = require('@ckeditor/ckeditor5-build-balloon-block');\n    // const ClassicEditor = require('@ckeditor/ckeditor5-editor-classic/src/classiceditor');\n\n    const editorConfiguration = {\n      heading: {\n        options: [\n          // {\n          //   model: 'paragraph',\n          //   title: 'Paragraph Tibi',\n          //   class: 'ck-heading_paragraph',\n          // },\n          {\n            model: 'heading5',\n            view: 'h5',\n            title: 'Tile Title (H5)',\n            class: 'ck-heading_heading5',\n          },\n          {\n            model: 'block_description',\n            view: {\n              name: 'div',\n              classes: 'chart-highlight',\n            },\n            title: 'Tile Description',\n            class: 'chart-highlight',\n          },\n          // {\n          //   model: 'heading2',\n          //   view: 'h2',\n          //   title: 'Heading 2',\n          //   class: 'ck-heading_heading2',\n          // },\n        ],\n      },\n    };\n    //\n\n    return (\n      <div\n        role=\"presentation\"\n        onClick={() => this.props.onSelectTile(this.props.block)}\n        className={cx('block text', { selected: this.props.selected })}\n        ref={node => (this.ref = node)}\n      >\n        <CKEditor\n          config={editorConfiguration}\n          editor={ClassicEditor}\n          data={this.state.htmltext}\n          onInit={editor => {\n            // You can store the \"editor\" and use when it is needed.\n            // console.log('Editor is ready to use!', editor);\n          }}\n          onChange={this.onChange}\n          onBlur={(event, editor) => {}}\n          onFocus={(event, editor) => {}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Edit);\n","/**\n * View text block.\n * @module components/manage/Tiles/Text/View\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport redraft from 'redraft';\nimport { settings } from '~/config';\n\n/**\n * View text block class.\n * @class View\n * @extends Component\n */\nconst View = ({ data }) => {\n  let text = data.cktext;\n  let result;\n\n  if (typeof text === 'string') {\n    // TODO: need better regexp here\n    text = text.replace(/(<? *script)/gi, 'illegalscript');\n    result = (\n      <div\n        dangerouslySetInnerHTML={{\n          __html: text,\n        }}\n      />\n    );\n  } else {\n    result = redraft(text, settings.ToHTMLRenderers, settings.ToHTMLOptions);\n  }\n  return text ? result : '';\n};\n\n/**\n * Property types.\n * @property {Object} propTypes Property types.\n * @static\n */\nView.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default View;\n","import React from 'react';\nimport { Form, Grid, Label } from 'semantic-ui-react';\nimport { map } from 'lodash';\n\nconst CKText = ({\n  id,\n  title,\n  required,\n  description,\n  error,\n  value,\n  onChange,\n  fieldSet,\n}) => {\n  if (__SERVER__) return <div />;\n  const CKEditor = require('@ckeditor/ckeditor5-react');\n  const ClassicEditor = require('@ckeditor/ckeditor5-build-classic');\n\n  const editorConfiguration = {\n    heading: {\n      options: [\n        // {\n        //   model: 'paragraph',\n        //   title: 'Paragraph Tibi',\n        //   class: 'ck-heading_paragraph',\n        // },\n        {\n          model: 'heading5',\n          view: 'h5',\n          title: 'Tile Title (H5)',\n          class: 'ck-heading_heading5',\n        },\n        {\n          model: 'block_description',\n          view: {\n            name: 'div',\n            classes: 'chart-highlight',\n          },\n          title: 'Tile Description',\n          class: 'chart-highlight',\n        },\n        // {\n        //   model: 'heading2',\n        //   view: 'h2',\n        //   title: 'Heading 2',\n        //   class: 'ck-heading_heading2',\n        // },\n      ],\n    },\n  };\n\n  return (\n    <Form.Field\n      inline\n      required={required}\n      error={error ? error.length > 0 : false}\n      id={`${fieldSet || 'field'}-${id}`}\n    >\n      <Grid>\n        <Grid.Row stretched>\n          <Grid.Column width=\"4\">\n            <div className=\"wrapper\">\n              <label htmlFor={`field-${id}`}>{title}</label>\n            </div>\n          </Grid.Column>\n          <Grid.Column width=\"8\">\n            <CKEditor\n              id={`field-${id}`}\n              name={id}\n              config={editorConfiguration}\n              editor={ClassicEditor}\n              data={value || ''}\n              onInit={editor => {}}\n              onChange={(event, editor) => onChange(id, editor.getData())}\n              onBlur={(event, editor) => {}}\n              onFocus={(event, editor) => {}}\n            />\n            {map(error, message => (\n              <Label key={message} basic color=\"red\" pointing>\n                {message}\n              </Label>\n            ))}\n          </Grid.Column>\n        </Grid.Row>\n        {description && (\n          <Grid.Row stretched>\n            <Grid.Column stretched width=\"12\">\n              <p className=\"help\">{description}</p>\n            </Grid.Column>\n          </Grid.Row>\n        )}\n      </Grid>\n    </Form.Field>\n  );\n};\n\nexport default CKText;\n","import React, { Component } from 'react';\nimport 'react-chart-editor/lib/react-chart-editor.css';\nimport Loadable from 'react-loadable';\nimport { connect } from 'react-redux';\nimport { searchContent } from '@plone/volto/actions';\nimport { getDataFromProvider } from '~/actions';\nimport { Dropdown } from 'semantic-ui-react';\n\nconst LoadablePlotlyEditor = Loadable({\n  loader: () => import('react-chart-editor'),\n  loading() {\n    return <div>Loading chart editor...</div>;\n  },\n});\n\nconst dataSources = {\n  col1: [1, 2, 3], // eslint-disable-line no-magic-numbers\n  col2: [4, 3, 2], // eslint-disable-line no-magic-numbers\n  col3: [17, 13, 9], // eslint-disable-line no-magic-numbers\n};\n\nfunction getDataSourceOptions(data) {\n  return Object.keys(data).map(name => ({\n    value: name,\n    label: name,\n  }));\n}\n\nconst config = { editable: true };\n\nclass Edit extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log('chart editor props', props);\n    const chartData = props.value || {};\n\n    this.state = {\n      data: chartData.data || [],\n      layout: chartData.layout || {},\n      frames: chartData.frames || [],\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeProvider = this.handleChangeProvider.bind(this);\n  }\n\n  onSubmit() {\n    const chartData = {\n      data: this.state.data,\n      layout: this.state.layout,\n      frames: this.state.frames,\n    };\n    this.props.onChangeValue(chartData);\n  }\n\n  componentWillMount() {\n    this.props.searchContent('', {\n      object_provides: 'forests.content.interfaces.IBasicDataProvider',\n    });\n  }\n\n  handleChange(data, layout, frames) {\n    this.setState({ data, layout, frames }, this.onSubmit);\n  }\n\n  handleChangeProvider(ev, { value }) {\n    this.props.getDataFromProvider(value);\n  }\n\n  render() {\n    const plotly = require('plotly.js/dist/plotly');\n    const selectProviders = this.props.providers.map(el => {\n      return {\n        key: el['@id'],\n        text: el.title,\n        value: el['@id'],\n      };\n    });\n\n    return (\n      <div>\n        {__CLIENT__ ? (\n          <div className=\"block selected\">\n            <div className=\"block-inner-wrapper\">\n              <Dropdown\n                placeholder=\"Select data provider\"\n                fluid\n                selection\n                options={selectProviders}\n                onChange={this.handleChangeProvider}\n              />\n              <LoadablePlotlyEditor\n                data={this.state.data}\n                layout={this.state.layout}\n                config={config}\n                frames={this.state.frames}\n                dataSources={this.props.providerData || dataSources}\n                dataSourceOptions={\n                  this.props.dataSourceOptions ||\n                  getDataSourceOptions(dataSources)\n                }\n                plotly={plotly}\n                onUpdate={this.handleChange}\n                useResizeHandler\n                debug\n                advancedTraceTypeSelector\n              />\n            </div>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state, props) => {\n    const providerData = state.data_providers ? state.data_providers.item : {};\n    return {\n      providers: state.search.items,\n      providerData,\n      dataSourceOptions: getDataSourceOptions(providerData || dataSources),\n    };\n  },\n  { searchContent, getDataFromProvider },\n)(Edit);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\n\n// import Helmet from 'react-helmet';\n// import { Container, Image } from 'semantic-ui-react';\n// import { map } from 'lodash';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport {\n  // setFolderHeader,\n  setFolderTabs, getParentFolderData } from '~/actions';\n\n// import { settings, blocks } from '~/config';\n\n// import // getBlocksFieldname,\n// // getBlocksLayoutFieldname,\n// // hasBlocksData,\n// '@plone/volto/helpers';\n\nimport BasicForestIMG from '~/components/theme/HomepageView/images/basic-forest.png';\nimport ForestCarbonIMG from '~/components/theme/HomepageView/images/forest-carbon.png';\nimport ForestIMG from '~/components/theme/HomepageView/images/forest.png';\nimport NatureIMG from '~/components/theme/HomepageView/images/nature.png';\n\nconst numberToWord = {\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  10: 'ten',\n  11: 'eleven',\n  12: 'twelve',\n};\n\nconst mapDispatchToProps = {\n  // setFolderHeader,\n  setFolderTabs,\n  getParentFolderData,\n};\n\nconst data = [\n  { name: '00', Decidous: 4000, Conifers: 2400 },\n  { name: '04', Decidous: 3000, Conifers: 1398 },\n  { name: '08', Decidous: 2000, Conifers: 9800 },\n  { name: '12', Decidous: 2780, Conifers: 3908 },\n  { name: '16', Decidous: 1890, Conifers: 4800 },\n];\n\nclass StackedBarChart extends Component {\n  render() {\n    return (\n      <ResponsiveContainer>\n        <BarChart\n          data={data}\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"Decidous\" stackId=\"a\" fill=\"#225511\" />\n          <Bar dataKey=\"Conifers\" stackId=\"a\" fill=\"#769e2e\" />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n\nclass HomepageView extends Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    content: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          title: PropTypes.string,\n          description: PropTypes.string,\n          url: PropTypes.string,\n          image: PropTypes.object,\n          image_caption: PropTypes.string,\n          '@type': PropTypes.string,\n        }),\n      ),\n    }).isRequired,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    // this.props.setFolderHeader({ inCountryFolder: true });\n  }\n\n  componentWillUnmount() {\n    // this.props.setFolderHeader({ inCountryFolder: false });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      JSON.stringify(nextProps.parent) !== JSON.stringify(this.props.parent)\n    ) {\n      const title = nextProps.parent.title;\n      const description = nextProps.parent.description;\n      const image =\n        nextProps.parent.items &&\n        nextProps.parent.items.find(c => c['@type'] === 'Image');\n      const url = image && image.image.download;\n      const inCountryFolder = true;\n      // this.props.setFolderHeader({ title, description, url, inCountryFolder });\n      const tabsItems = nextProps.parent.items\n        .map(i => ({\n          // this is ugly\n          url: i['@id'].split('/Plone/')[1],\n          title: i.title,\n          '@type': i['@type'],\n        }))\n        .filter(i => i.title !== 'folder_info');\n      this.props.setFolderTabs(tabsItems);\n    }\n  }\n\n  render() {\n    // const content = this.props.content;\n    // const blocksFieldname = getBlocksFieldname(content);\n    // const blocksLayoutFieldname = getBlocksLayoutFieldname(content);\n\n    this.tabs = [\n      { title: 'Coverage & Growth', url: '', type: 'Section' },\n      { title: 'Economy', url: '', type: 'Section' },\n      { title: 'Other Benefits', url: '', type: 'Section' },\n    ];\n\n    return (\n      <div id=\"page-document\" className=\"ui wrapper\">\n        <div className=\"main-content\">\n          <div className=\"centered-content\">\n            <h2>A bird's-eye view on Europe’s forests</h2>\n            <p>\n              Europe is one of the few regions of the world where forest cover\n              has increased over the last century. The EU currently contains 5 %\n              of the world's forests. Let’s take a look at factors which led to\n              this net growth as well as their economical and ecological\n              implication.\n            </p>\n          </div>\n\n          {this.tabs && this.tabs.length ? (\n            <div\n              className={\n                'ui home-tab item stackable tabs menu ' +\n                numberToWord[this.tabs.length]\n              }\n            >\n              {this.tabs.map((item, ix) => (\n                <Link\n                  key={ix}\n                  className=\"item\"\n                  to={item.url}\n                  title={item['@type']}\n                >\n                  {item.title}\n                </Link>\n              ))}\n            </div>\n          ) : (\n            ''\n          )}\n\n          <div className=\"ui active tab tab-content\">\n            <div className=\"ui stackable two column grid\">\n              <div className=\"column\">\n                <div className=\"ui two column stackable grid\">\n                  <div className=\"column\">\n                    <div className=\"ui segment coverage-segment\">\n                      <h5>Forest coverage</h5>\n                      <div className=\"land-data-wrapper\">\n                        <div className=\"land-data\">43%</div>\n                        <div className=\"land-data-content\">\n                          of Europe's land surface <span>181 Mha</span>\n                        </div>\n                      </div>\n                      <div className=\"coverage-data\">\n                        <div className=\"owned-data\">\n                          <span>71%</span> publicy owned\n                        </div>\n                        <div className=\"private-data\">\n                          <span>29%</span> private\n                        </div>\n                      </div>\n                      <span className=\"discreet\">2017 tree cover extent</span>\n                    </div>\n                  </div>\n\n                  <div className=\"column\">\n                    <div className=\"ui segment data-box orange-data-highlight\">\n                      <h5>Protected forests</h5>\n                      <div className=\"land-data-wrapper\">\n                        <div className=\"land-data\">12%</div>\n                        <div className=\"land-data-content\">\n                          of Europe's land surface <span>51 Mha</span>\n                        </div>\n                      </div>\n                      <div className=\"ui bulleted list\">\n                        <div className=\"item\">\n                          Germany\n                          <span>16.2Mha</span>\n                        </div>\n                        <div className=\"item\">\n                          Finland\n                          <span>12.4Mha</span>\n                        </div>\n                        <div className=\"item\">\n                          Italy\n                          <span>14.5Mha</span>\n                        </div>\n                      </div>\n                      <span className=\"discreet\">See all countries</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"ui one column stackable grid\">\n                  <div className=\"column\">\n                    <div className=\"ui segment\">\n                      <div className=\"ui grid\">\n                        <div className=\"four wide column\">\n                          <h5>Growing stock</h5>\n                          <div className=\"chart-hightlight\">\n                            Vestibulum eget est ac lorem dapibus lacinia.\n                            Integer magna nunc, scelerisque in lacinia nec,\n                            laoreet non augue. Nunc quis pharetra magna, in\n                            convallis ligula.\n                          </div>\n                        </div>\n                        <span className=\"discreet\">2017 tree cover extent</span>\n                        <div className=\"eight wide column\">\n                          <div className=\"chart-container\">\n                            <StackedBarChart />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"column map-container\">\n                <div className=\"map-wrapper\">\n                  <iframe\n                    title=\"Test Map\"\n                    src=\"https://maps.eea.europa.eu/CopernicusViewer/?webmap=f9a8ae48d60a49f1bd9b16dba0f2c5fe&extent=-20.0,30.0,44.0,66.0&zoom=true\"\n                    width=\"100%\"\n                    height=\"490\"\n                  />\n                </div>\n\n                <div className=\"map-buttons\">\n                  <button className=\"ui primary button\">Land Cover</button>\n                  <button className=\"ui button\">Map type no2</button>\n                  <button className=\"ui button\">Map type no3</button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"thematic-areas\">\n            <div className=\"centered-content\">\n              <h2>Main thematic areas</h2>\n              <p>\n                For several decades now, environmental forest functions have\n                attracted increasing attention mainly in relation to the\n                protection of biodiversity and, more recently, in the context of\n                climate change impacts and energy policies. Forests are\n                increasingly valued for their role as regulators of climate and\n                local weather, protection against natural disasters and\n                renewable energy sources.\n              </p>\n            </div>\n\n            <div className=\"ui stackable four column grid\">\n              <div className=\"column area-section\">\n                <div className=\"area-image\">\n                  <img src={BasicForestIMG} alt=\"\" />\n                </div>\n                <div className=\"area-content\">\n                  <h5 className=\"area-title\">Basic forest information</h5>\n                  <p className=\"area-description\">\n                    Forests provide renewable raw materials and energy, maintain\n                    biodiversity, and protect land and water resources.\n                  </p>\n                </div>\n                <button className=\"ui button\">Learn more</button>\n              </div>\n\n              <div className=\"column area-section\">\n                <div className=\"area-image\">\n                  <img src={NatureIMG} alt=\"\" />\n                </div>\n                <div className=\"area-content\">\n                  <h5 className=\"area-title\">Nature and biodiversity</h5>\n                  <p className=\"area-description\">\n                    Biodiversity is the wide variety of animals, plants, their\n                    habitats and their genes, and it is vital to countless human\n                    activities.\n                  </p>\n                </div>\n                <button className=\"ui button\">Learn more</button>\n              </div>\n\n              <div className=\"column area-section\">\n                <div className=\"area-image\">\n                  <img src={ForestCarbonIMG} alt=\"\" />\n                </div>\n                <div className=\"area-content\">\n                  <h5 className=\"area-title\">Forest carbon - LULUCF</h5>\n                  <p className=\"area-description\">\n                    EU climate policy which helps reduce EU greenhouse gas\n                    emissions to at least 40 per cent below 1990 levels by 2030.\n                  </p>\n                </div>\n                <button className=\"ui button\">Learn more</button>\n              </div>\n\n              <div className=\"column area-section\">\n                <div className=\"area-image\">\n                  <img src={ForestIMG} alt=\"\" />\n                </div>\n                <div className=\"area-content\">\n                  <h5 className=\"area-title\">Forest bioeconomy</h5>\n                  <p className=\"area-description\">\n                    Usin renewable biological resources to produce food,\n                    materials and energy.\n                  </p>\n                </div>\n                <button className=\"ui button\">Learn more</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    tabs: state.folder_tabs.items,\n    parent: state.parent_folder_data.items,\n  }),\n  mapDispatchToProps,\n)(HomepageView);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { getMosaicSettings } from '~/actions';\n\nclass MosaicSettingsView extends Component {\n  static propTypes = {\n    getMosaicSettings: PropTypes.func.isRequired,\n    settings: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: props.settings,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let oldSettings = JSON.stringify(this.props.settings);\n    let newSettings = JSON.stringify(nextProps.settings);\n\n    if (oldSettings !== newSettings) {\n      this.setState({ settings: nextProps.settings });\n    }\n  }\n\n  componentWillMount() {\n    this.props.getMosaicSettings();\n  }\n\n  getCard(style, key) {\n    let bits = style.split('|');\n    let name = bits[0];\n    let klass = 'block-box preview ' + bits[1];\n\n    return (\n      <div className={klass} key={key}>\n        {name}\n      </div>\n    );\n  }\n  render() {\n    console.log('state', this.state.settings);\n    return this.state.settings && this.state.settings.styles ? (\n      <div>{this.state.settings.styles.map(this.getCard)}</div>\n    ) : (\n      ''\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    settings: state.mosaic_settings.items,\n  }),\n  { getMosaicSettings },\n)(MosaicSettingsView);\n","import React from 'react';\n\nimport {\n  settings as defaultSettings,\n  views as defaultViews,\n  widgets as defaultWidgets,\n  blocks as defaultBlocks,\n} from '@plone/volto/config';\n\nimport { defineMessages } from 'react-intl';\nimport TokenWidget from '@plone/volto/components/manage/Widgets/TokenWidget';\nimport HiddenWidget from '~/components/manage/Widgets/Hidden';\nimport CKEditorWidget from '~/components/manage/Widgets/CKEditor';\nimport ChartWidget from '~/components/manage/Widgets/Chart';\n\nimport ChartTileEdit from '~/components/manage/Tiles/ChartTile/ChartTileEdit';\nimport ChartTileView from '~/components/manage/Tiles/ChartTile/ChartTileView';\n\nimport EuropeCompareTileEdit from '~/components/manage/Tiles/EuropeCompareTile/Edit';\nimport EuropeCompareTileView from '~/components/manage/Tiles/EuropeCompareTile/View';\n\nimport EuropeForestTileEdit from '~/components/manage/Tiles/EuropeForestTile/Edit';\nimport EuropeForestTileView from '~/components/manage/Tiles/EuropeForestTile/View';\n\nimport PlotlyTileEdit from '~/components/manage/Tiles/PlotlyChart/Edit';\nimport PlotlyTileView from '~/components/manage/Tiles/PlotlyChart/View';\n\nimport TableauTileEdit from '~/components/manage/Tiles/TableauTile/TableauTileEdit';\nimport tableauTileView from '~/components/manage/Tiles/TableauTile/TableauTileView';\n\nimport TextTileEdit from '~/components/manage/Tiles/Text/Edit';\nimport TextTileView from '~/components/manage/Tiles/Text/View';\n\nimport ForestMetadata from '~/components/theme/Portlets/ForestMetadata';\nimport SliderEditButton from '~/components/manage/Slider/Portlet';\n\n// Display types\n// import CountryView from '~/components/theme/CountryView/CountryView';\n// import CountryPageView from '~/components/theme/CountryPageView/CountryPageView';\nimport HomepageView from '~/components/theme/HomepageView/HomepageView';\nimport VisualizationView from '~/components/theme/VisualizationView/View';\n\nimport createInlineStyleButton from 'draft-js-buttons/lib/utils/createInlineStyleButton';\nimport Icon from '@plone/volto/components/theme/Icon/Icon';\nimport underlineSVG from '@plone/volto/icons/underline.svg';\nimport chartIcon from '@plone/volto/icons/world.svg';\n\nimport { layoutViews } from '~/../volto-mosaic/src';\n\nconst Underline = createInlineStyleButton({\n  style: 'UNDERLINE',\n  children: <Icon name={underlineSVG} size=\"24px\" />,\n});\n\nexport const settings = {\n  ...defaultSettings,\n  richTextEditorInlineToolbarButtons: [\n    Underline,\n    ...defaultSettings.richTextEditorInlineToolbarButtons,\n  ],\n  nonContentRoutes: [\n    // handled differently in getBaseUrl\n    ...defaultSettings.nonContentRoutes,\n    '/manage-slider',\n    '/mosaic-settings-view',\n    '/data-providers-view',\n  ],\n};\n\nexport const views = {\n  ...defaultViews,\n  layoutViews: {\n    ...defaultViews.layoutViews,\n    // full_view: CountryView,\n    // country_tab_view: CountryPageView,\n    homepage_view: HomepageView,\n    ...layoutViews,\n  },\n  contentTypesViews: {\n    ...defaultViews.contentTypesViews,\n    visualization: VisualizationView,\n  },\n};\n\n// read @plone/volto/components/manage/Form/Field.jsx to understand this\nexport const widgets = {\n  ...defaultWidgets,\n  vocabulary: {\n    ...defaultWidgets.vocabulary,\n    'fise.topics': TokenWidget,\n    'fise.keywords': TokenWidget,\n    'fise.publishers': TokenWidget,\n  },\n  id: {\n    ...defaultWidgets.id,\n    blocks: HiddenWidget,\n    blocks_layout: HiddenWidget,\n    visualization: ChartWidget,\n  },\n  widget: {\n    ...defaultWidgets.widget,\n    cktext: CKEditorWidget,\n  },\n};\n\ndefineMessages({\n  custom_addons: {\n    id: 'custom_addons',\n    defaultMessage: 'Custom Addons',\n  },\n  plotly_chart: {\n    id: 'plotly_chart',\n    defaultMessage: 'Plotly Chart',\n  },\n  demo_chart: {\n    id: 'demo_chart',\n    defaultMessage: 'Demo Chart',\n  },\n  tableau: {\n    id: 'tableau',\n    defaultMessage: 'Tableau',\n  },\n  forests_specific: {\n    id: 'forests_specific',\n    defaultMessage: 'Forests Specific Tiles',\n  },\n});\n\nconsole.log('alalalala', defaultBlocks)\n\nexport const blocks = {\n  ...defaultBlocks,\n\n  groupBlocksOrder: [\n    ...defaultBlocks.groupBlocksOrder,\n    { id: 'custom_addons', title: 'Custom addons' },\n    { id: 'forests_specific', title: 'Forests Specific Tiles' },\n  ],\n\n  blocksConfig: {\n    ...defaultBlocks.blocksConfig,\n    europe_compare_block: {\n      id: 'europe_compare_block',\n      title: 'Europe Compare Tile',\n      view: EuropeCompareTileView,\n      edit: EuropeCompareTileEdit,\n      icon: chartIcon,\n      group: 'forests_specific',\n    },\n    europe_forest_block: {\n      id: 'europe_forest_block',\n      title: 'Europe Forest Area Tile',\n      view: EuropeForestTileView,\n      edit: EuropeForestTileEdit,\n      icon: chartIcon,\n      group: 'forests_specific',\n    },\n    embed_chart: {\n      id: 'embed_chart',\n      title: 'Embed Chart',\n      view: ChartTileView,\n      edit: ChartTileEdit,\n      icon: chartIcon,\n      group: 'custom_addons',\n    },\n    plotly_chart: {\n      id: 'plotly_chart',\n      title: 'Plotly Chart',\n      view: PlotlyTileView,\n      edit: PlotlyTileEdit,\n      icon: chartIcon,\n      group: 'custom_addons',\n    },\n    tableau: {\n      id: 'tableau',\n      title: 'Tableau',\n      view: tableauTileView,\n      edit: TableauTileEdit,\n      icon: chartIcon,\n      group: 'custom_addons',\n    },\n    cktext: {\n      id: 'cktext',\n      group: 'text',\n      title: 'CKEditor',\n      view: TextTileView,\n      edit: TextTileEdit,\n      icon: defaultBlocks.blocksConfig.text.icon,\n    },\n  },\n};\n\nexport const portlets = [ForestMetadata, SliderEditButton];\n","/**\n * Document view component.\n * @module components/theme/View/ListingView\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport { getLocalnavigation } from '~/actions';\nimport { connect } from 'react-redux';\nimport { flattenToAppURL } from '@plone/volto/helpers';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Container, Image, Grid } from 'semantic-ui-react';\nimport { map } from 'lodash';\n\nimport { settings, blocks } from '~/config';\n\nimport {\n  getBlocksFieldname,\n  getBlocksLayoutFieldname,\n  hasBlocksData,\n} from '@plone/volto/helpers';\n\nconst messages = defineMessages({\n  unknownBlock: {\n    id: 'Unknown Block',\n    defaultMessage: 'Unknown Block {block}',\n  },\n});\n\nclass ListingView extends Component {\n  static propTypes = {\n    localNavigation: PropTypes.any,\n    getLocalnavigation: PropTypes.func.isRequired,\n    pathname: PropTypes.any,\n    content: PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n      text: PropTypes.shape({\n        data: PropTypes.string,\n      }),\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          '@id': PropTypes.string,\n          '@type': PropTypes.string,\n          description: PropTypes.string,\n          review_state: PropTypes.string,\n          title: PropTypes.string,\n          url: PropTypes.string,\n        }),\n      ),\n    }).isRequired,\n  };\n\n  componentDidMount() {\n    this.props.getLocalnavigation(flattenToAppURL(this.props.content['@id']));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.pathname !== this.props.pathname) {\n      this.props.getLocalnavigation(flattenToAppURL(this.props.pathname));\n    }\n  }\n\n  render() {\n    const content = this.props.content;\n    const intl = this.props.intl;\n    const blocksFieldname = getBlocksFieldname(content);\n    const blocksLayoutFieldname = getBlocksLayoutFieldname(content);\n    const localNavigation =\n      (this.props.localNavigation.items &&\n        this.props.localNavigation.items.filter(\n          item => item.title !== 'Home',\n        )) ||\n      [];\n    let pageTemplate = (\n      <Grid columns={3} className=\"folderWithContent\">\n        <Grid.Column tablet={0} largeScreen={3} widescreen={3}></Grid.Column>\n        <Grid.Column tablet={12} largeScreen={6} widescreen={6}>\n          {hasBlocksData(content) ? (\n            <div id=\"page-document\">\n              <Helmet title={content.title} />\n              {map(content[blocksLayoutFieldname].items, block => {\n                const Tile =\n                  blocks.blocksConfig[\n                    (content[blocksFieldname]?.[block]?.['@type'])\n                  ]?.['view'] || null;\n                return Tile !== null ? (\n                  <Tile\n                    key={block}\n                    id={block}\n                    properties={content}\n                    data={content[blocksFieldname][block]}\n                  />\n                ) : (\n                  <div key={block}>\n                    {intl.formatMessage(messages.unknownBlock, {\n                      block: content[blocksFieldname]?.[block]?.['@type'],\n                    })}\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <Container id=\"page-document\">\n              <Helmet title={content.title} />\n              {/* <h1 className=\"documentFirstHeading\">{content.title}</h1>\n              {content.description && (\n                <p className=\"documentDescription\">{content.description}</p>\n              )} */}\n              {content.image && (\n                <Image\n                  className=\"document-image\"\n                  src={content.image.scales.thumb.download}\n                  floated=\"right\"\n                />\n              )}\n              {content.remoteUrl && (\n                <span>\n                  The link address is:\n                  <a href={content.remoteUrl}>{content.remoteUrl}</a>\n                </span>\n              )}\n              {content.text && (\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: content.text.data.replace(\n                      /a href=\"([^\"]*\\.[^\"]*)\"/g,\n                      `a href=\"${settings.apiPath}$1/download/file\"`,\n                    ),\n                  }}\n                />\n              )}\n            </Container>\n          )}\n        </Grid.Column>\n        <Grid.Column tablet={6} largeScreen={3} widescreen={3}>\n          <ul className=\"localNavigation\">\n            {localNavigation.map(item => (\n              <li>\n                <Link to={flattenToAppURL(item['@id'])} key={item['@id']}>\n                  {item.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </Grid.Column>\n      </Grid>\n    );\n    if (!localNavigation.length) {\n      pageTemplate = hasBlocksData(content) ? (\n        <div id=\"page-document\">\n          <Helmet title={content.title} />\n          {map(content[blocksLayoutFieldname].items, block => {\n            const Tile =\n              blocks.blocksConfig[(content[blocksFieldname]?.[block]?.['@type'])]?.[\n                'view'\n              ] || null;\n            return Tile !== null ? (\n              <Tile\n                key={block}\n                id={block}\n                properties={content}\n                data={content[blocksFieldname][block]}\n              />\n            ) : (\n              <div key={block}>\n                {intl.formatMessage(messages.unknownBlock, {\n                  block: content[blocksFieldname]?.[block]?.['@type'],\n                })}\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <Container id=\"page-document\">\n          <Helmet title={content.title} />\n          <h1 className=\"documentFirstHeading\">{content.title}</h1>\n          {content.description && (\n            <p className=\"documentDescription\">{content.description}</p>\n          )}\n          {content.image && (\n            <Image\n              className=\"document-image\"\n              src={content.image.scales.thumb.download}\n              floated=\"right\"\n            />\n          )}\n          {content.remoteUrl && (\n            <span>\n              The link address is:\n              <a href={content.remoteUrl}>{content.remoteUrl}</a>\n            </span>\n          )}\n          {content.text && (\n            <div\n              dangerouslySetInnerHTML={{\n                __html: content.text.data.replace(\n                  /a href=\"([^\"]*\\.[^\"]*)\"/g,\n                  `a href=\"${settings.apiPath}$1/download/file\"`,\n                ),\n              }}\n            />\n          )}\n        </Container>\n      );\n    }\n    // return (\n    //   <Container id=\"page-home\">\n    //     <Helmet title={content.title} />\n    //     <section id=\"content-core\">\n    //       {content.items.map(item => (\n    //         <article key={item.url}>\n    //           <h2>\n    //             <Link to={item.url} title={item['@type']}>\n    //               {item.title}\n    //             </Link>\n    //           </h2>\n    //           {item.description && <p>{item.description}</p>}\n    //         </article>\n    //       ))}\n    //     </section>\n    //   </Container>\n    // );\n    return pageTemplate;\n  }\n}\n\nexport default connect(\n  (state, props) => ({\n    localNavigation: state.localnavigation.items,\n    pathname: props.location.pathname,\n  }),\n  { getLocalnavigation },\n)(injectIntl(ListingView));\n"],"mappings":"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","sourceRoot":""}