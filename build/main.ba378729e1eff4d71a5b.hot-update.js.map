{"version":3,"file":"main.ba378729e1eff4d71a5b.hot-update.js","sources":["webpack:///./src/components/manage/Blocks/Text/Edit.jsx"],"sourcesContent":["/**\n * Edit text block.\n * @module components/manage/Blocks/Title/Edit\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport cx from 'classnames';\nimport '~/../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { EditorState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\n/**\n * Edit text block class.\n * @class Edit\n * @extends Component\n */\nclass Edit extends Component {\n  /**\n   * Property types.\n   * @property {Object} propTypes Property types.\n   * @static\n   */\n  static propTypes = {\n    data: PropTypes.objectOf(PropTypes.any).isRequired,\n    detached: PropTypes.bool,\n    index: PropTypes.number.isRequired,\n    selected: PropTypes.bool.isRequired,\n    block: PropTypes.string.isRequired,\n    onAddBlock: PropTypes.func.isRequired,\n    onChangeBlock: PropTypes.func.isRequired,\n    onDeleteBlock: PropTypes.func.isRequired,\n    onMutateBlock: PropTypes.func.isRequired,\n    onFocusPreviousBlock: PropTypes.func.isRequired,\n    onFocusNextBlock: PropTypes.func.isRequired,\n    onSelectBlock: PropTypes.func.isRequired,\n  };\n\n  /**\n   * Default properties\n   * @property {Object} defaultProps Default properties.\n   * @static\n   */\n  static defaultProps = {\n    detached: false,\n  };\n\n  /**\n   * Constructor\n   * @method constructor\n   * @param {Object} props Component properties\n   * @constructs WysiwygEditor\n   */\n  constructor(props) {\n    super(props);\n\n    if (!__SERVER__) {\n      const htmltext = (props.data && props.data.editorState) || '';\n\n      this.state = {editorState: htmltext || EditorState.createEmpty()};\n    \n    }\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(editorState) {\n    this.props.onChangeBlock(this.props.block, {\n      ...this.props.data,\n      editorState,\n    });\n    this.setState({editorState})\n  }\n\n  /**\n   * Render method.\n   * @method render\n   * @returns {string} Markup for the component.\n   */\n  render() {\n    if (__SERVER__) {\n      return <div />;\n    }\n\n    const editorConfiguration = {\n      heading: {\n        options: [\n          {\n            model: 'heading5',\n            view: 'h5',\n            title: 'Block Title (H5)',\n            class: 'ck-heading_heading5',\n          },\n          {\n            model: 'block_description',\n            view: {\n              name: 'div',\n              classes: 'chart-highlight',\n            },\n            title: 'Block Description',\n            class: 'chart-highlight',\n          },\n        ],\n      },\n    };\n    //\n    const { editorState } = this.state;\n    return (\n      <div\n        role=\"presentation\"\n        // onClick={() => this.props.onSelectBlock(this.props.block)}\n        className={cx('block text', { selected: this.props.selected })}\n        // ref={node => (this.ref = node)}\n        onClick={(e)=> {\n          this.props.onSelectBlock(this.props.block)\n        }}\n        onKeyPress={(e)=> {\n\n          console.log('lalalala', e)\n          this.props.handleKeyDown(e,\n            this.props.index,\n            this.props.block,\n            this.ref,\n            {\n              disableEnter: true,\n              disableArrowUp: true,\n              disableArrowDown: true,\n            })\n          }\n          }\n\n      >\n        <Editor\n          editorState={editorState} \n          onEditorStateChange={this.onChange}\n          // onChange={this.onChange}\n        ref={node => (this.ref = node)}\n\n          onKeyPress={(e)=>{console.log(e)}}\n          // onKeyPress={(e)=>this.props.handleKeyDown(e,\n          //   this.props.index,\n          //   this.props.block,\n          //   this.ref,\n          //   {\n          //     disableEnter: true,\n          //     disableArrowUp: true,\n          //     disableArrowDown: true,\n          // })}\n          // onBlur={(event, editor) => {}}\n          // onFocus={(event, editor) => {}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Edit);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAKA;;;;;AACA;;;;;;AAoBA;;;;;;AASA;;;;;;AAMA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA,gCAKA;AACA;AACA;AAVA;AAWA;AACA;;;AACA;AACA;AAEA;AAFA;AAIA;AAAA;AAAA;AACA;AAEA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AARA;AADA;AACA;AANA;AA4BA;AAEA;AADA;AAGA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAKA;AACA;AACA;AAHA;AAKA;AApBA;AAAA;AAAA;AAAA;AAAA;AAyBA;AACA;AAFA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;;;;AAxIA;AACA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AAPA;AA2BA;AADA;AACA;AAgHA;;;;A","sourceRoot":""}